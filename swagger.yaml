openapi: 3.1.0
info:
  title: Reolink Camera API
  version: 8.0.0
  description: |
    HTTP/HTTPS API for Reolink IP cameras and NVRs.
    Provides access to system, network, video, recording, PTZ and alarm configuration and controls.
    Supports JSON request/response format.

    The API has a single `/api.cgi` endpoint which accepts POST requests.
    The specific command is passed as a `cmd` query parameter.

    Two authentication methods are supported:
    1. Long-session - Obtain a token via `/api.cgi?cmd=Login` and pass it as `token` query parameter
    2. Short-session - Pass `user` and `password` as query parameters in each request

    ## Device Compatibility
    Operations marked with tag `IPC-only` are only available on IP cameras.
    Operations marked with tag `NVR-only` are only available on NVR devices.
    Operations without these tags are available on both device types.
  license:
    name: AGPL
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
servers:
  - url: https://{camera_ip}
    description: Reolink Camera/NVR HTTPS
    variables:
      camera_ip:
        description: IP address of the Reolink device
        default: 192.168.1.100
  - url: http://{camera_ip}
    description: Reolink Camera/NVR HTTP (if enabled)
    variables:
      camera_ip:
        description: IP address of the Reolink device
        default: 192.168.1.100
security:
  - tokenAuth: []
  - shortSession: []
tags:
  - name: System
    description: System-related operations like device info, maintenance, and configuration
  - name: Security
    description: Security operations including login, user management and authentication
  - name: Network
    description: Network configuration including wifi, email, FTP, and port settings
  - name: Video Input
    description: Video input configuration including image settings and overlays
  - name: Encoding
    description: Video encoding configuration and settings
  - name: Recording
    description: Recording configuration, search, and playback
  - name: PTZ
    description: Pan-Tilt-Zoom camera control and configuration
  - name: Alarm
    description: Alarm configuration and management
  - name: LED
    description: LED control including IR lights and power LED
  - name: AI
    description: AI-related features including detection and tracking
  - name: IPC-only
    description: Operations only available on IP cameras
  - name: NVR-only
    description: Operations only available on Network Video Recorders
externalDocs:
  description: Reolink Introduction to CGI/API
  url: https://support.reolink.com/hc/en-us/articles/900000625763-Introduction-to-CGI-API/
paths:
  /api.cgi?cmd=GetAbility:
    post:
      tags:
        - System
      summary: Get device information
      description: It is used to get system ability of appointed user
      x-deviceSupport: both
      operationId: getAbility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    User:
                      type: object
                      required:
                        - userName
                      properties:
                        userName:
                          type: string
                          maxLength: 31
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - DevInfo
                          properties:
                            DevInfo:
                              type: object
                              properties:
                                B485:
                                  type: integer
                                  enum:
                                    - 0
                                    - 1
                                  description: '0: no 485, 1: have 485'
                                IOInputNum:
                                  type: integer
                                  description: Number of IO input ports
                                IOOutputNum:
                                  type: integer
                                  description: Number of IO output ports
                                audioNum:
                                  type: integer
                                  description: Number of audio channels
                                buildDay:
                                  type: string
                                  example: build 20080734
                                cfgVer:
                                  type: string
                                  example: v3.0.0.0
                                  description: Configuration version
                                channelNum:
                                  type: integer
                                  description: Number of channels
                                detail:
                                  type: string
                                  description: Detailed device information
                                diskNum:
                                  type: integer
                                  description: Number of storage disks/cards
                                exactType:
                                  type: string
                                  enum:
                                    - NVR
                                    - IPC
                                  description: Exact device type
                                firmVer:
                                  type: string
                                  description: Firmware version
                                frameworkVer:
                                  type: integer
                                  description: Framework version
                                hardVer:
                                  type: string
                                  description: Hardware version
                                model:
                                  type: string
                                  description: Device model
                                name:
                                  type: string
                                  description: Device name
                                serial:
                                  type: string
                                  description: Device serial number
                                type:
                                  type: string
                                  enum:
                                    - NVR
                                    - IPC
                                  description: Device type
                                wifi:
                                  type: integer
                                  enum:
                                    - 0
                                    - 1
                                  description: 'Whether WiFi is supported: 0-no, 1-yes'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetDevInfo:
    post:
      tags:
        - System
      summary: Get device information
      description: Returns detailed information about the device including model, firmware version, and capabilities.
      x-deviceSupport: both
      operationId: getDevInfo
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - DevInfo
                          properties:
                            DevInfo:
                              type: object
                              properties:
                                B485:
                                  type: integer
                                  enum:
                                    - 0
                                    - 1
                                  description: '0: no 485, 1: have 485'
                                IOInputNum:
                                  type: integer
                                  description: Number of IO input ports
                                IOOutputNum:
                                  type: integer
                                  description: Number of IO output ports
                                audioNum:
                                  type: integer
                                  description: Number of audio channels
                                buildDay:
                                  type: string
                                  example: build 20080734
                                cfgVer:
                                  type: string
                                  example: v3.0.0.0
                                  description: Configuration version
                                channelNum:
                                  type: integer
                                  description: Number of channels
                                detail:
                                  type: string
                                  description: Detailed device information
                                diskNum:
                                  type: integer
                                  description: Number of storage disks/cards
                                exactType:
                                  type: string
                                  enum:
                                    - NVR
                                    - IPC
                                  description: Exact device type
                                firmVer:
                                  type: string
                                  description: Firmware version
                                frameworkVer:
                                  type: integer
                                  description: Framework version
                                hardVer:
                                  type: string
                                  description: Hardware version
                                model:
                                  type: string
                                  description: Device model
                                name:
                                  type: string
                                  description: Device name
                                serial:
                                  type: string
                                  description: Device serial number
                                type:
                                  type: string
                                  enum:
                                    - NVR
                                    - IPC
                                  description: Device type
                                wifi:
                                  type: integer
                                  enum:
                                    - 0
                                    - 1
                                  description: 'Whether WiFi is supported: 0-no, 1-yes'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetDevName:
    post:
      tags:
        - System
      summary: Get device name
      description: Returns the configured name of the device
      x-deviceSupport: both
      operationId: getDevName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - DevName
                          properties:
                            DevName:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Current device name
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetDevName:
    post:
      tags:
        - System
      summary: Set device name
      description: Sets a new name for the device
      x-deviceSupport: both
      operationId: setDevName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - DevName
                      properties:
                        DevName:
                          type: object
                          required:
                            - name
                          properties:
                            name:
                              type: string
                              maxLength: 31
                              description: New device name
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetTime:
    post:
      tags:
        - System
      summary: Get system time settings
      description: Returns the current system time configuration including timezone and DST settings
      x-deviceSupport: both
      operationId: getTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Time
                            - Dst
                          properties:
                            Time:
                              $ref: '#/components/schemas/TimeConfig'
                            Dst:
                              $ref: '#/components/schemas/DSTConfig'
                        initial:
                          type: object
                          properties:
                            Time:
                              $ref: '#/components/schemas/TimeConfig'
                            Dst:
                              $ref: '#/components/schemas/DSTConfig'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetTime:
    post:
      tags:
        - System
      summary: Set system time settings
      description: Updates the system time configuration including timezone and DST settings
      x-deviceSupport: both
      operationId: setTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      properties:
                        Time:
                          $ref: '#/components/schemas/TimeConfig'
                        Dst:
                          $ref: '#/components/schemas/DSTConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetAutoMaint:
    post:
      tags:
        - System
      summary: Get auto maintenance settings
      description: Returns the automatic maintenance configuration
      x-deviceSupport: both
      operationId: getAutoMaint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - AutoMaint
                          properties:
                            AutoMaint:
                              $ref: '#/components/schemas/AutoMaintConfig'
                        initial:
                          type: object
                          properties:
                            AutoMaint:
                              $ref: '#/components/schemas/AutoMaintConfig'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetAutoMaint:
    post:
      tags:
        - System
      summary: Set auto maintenance settings
      description: Configures automatic maintenance schedule
      x-deviceSupport: both
      operationId: setAutoMaint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - AutoMaint
                      properties:
                        AutoMaint:
                          $ref: '#/components/schemas/AutoMaintConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetHddInfo:
    post:
      tags:
        - System
      summary: Get storage device information
      description: Returns information about hard disks or SD cards
      x-deviceSupport: both
      operationId: getHddInfo
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - HddInfo
                          properties:
                            HddInfo:
                              type: array
                              items:
                                $ref: '#/components/schemas/StorageInfo'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=Format:
    post:
      tags:
        - System
      summary: Format storage device
      description: Format hard disks or SD card
      x-deviceSupport: both
      operationId: format
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - HddInfo
                      properties:
                        HddInfo:
                          type: object
                          required:
                            - id
                          properties:
                            id:
                              type: array
                              items:
                                type: integer
                              description: Array of storage device IDs to format
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=Upgrade:
    post:
      tags:
        - System
      summary: Upgrade firmware
      description: |
        Uploads and installs new firmware.
        Must send UpgradePrepare command first.
        Supports uploading up to 40KB packets at a time.
      x-deviceSupport: both
      operationId: upgrade
      parameters:
        - name: clearConfig
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 0
              - 1
          description: |
            Whether to clear configuration
            * 0 - Keep configuration
            * 1 - Clear configuration
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - upgrade-package
              properties:
                upgrade-package:
                  type: string
                  format: binary
                  description: Firmware upgrade file
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=Restore:
    post:
      tags:
        - System
      summary: Restore factory defaults
      description: Resets all configurations to factory default settings
      x-deviceSupport: both
      operationId: restore
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=Reboot:
    post:
      tags:
        - System
      summary: Reboot device
      description: Reboots the device
      x-deviceSupport: both
      operationId: reboot
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=UpgradePrepare:
    post:
      tags:
        - System
      summary: Prepare for firmware upgrade
      description: Validates upgrade file and prepares for upgrade process
      x-deviceSupport: both
      operationId: upgradePrepare
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - fileName
                      properties:
                        restoreCfg:
                          type: integer
                          enum:
                            - 0
                            - 1
                          description: |
                            Whether to restore configuration after upgrade
                            * 0 - Keep configuration
                            * 1 - Restore defaults
                        fileName:
                          type: string
                          description: Name of the upgrade file
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetAutoUpgrade:
    post:
      tags:
        - System
      summary: Get auto upgrade settings
      description: Returns the automatic upgrade configuration
      x-deviceSupport: both
      operationId: getAutoUpgrade
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - AutoUpgrade
                          properties:
                            AutoUpgrade:
                              type: object
                              properties:
                                enable:
                                  $ref: '#/components/schemas/EnableSwitch'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetAutoUpgrade:
    post:
      tags:
        - System
      summary: Set auto upgrade settings
      description: Configures automatic upgrade settings
      x-deviceSupport: both
      operationId: setAutoUpgrade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - AutoUpgrade
                      properties:
                        AutoUpgrade:
                          type: object
                          required:
                            - enable
                          properties:
                            enable:
                              $ref: '#/components/schemas/EnableSwitch'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=CheckFirmware:
    post:
      tags:
        - System
      summary: Check for firmware updates
      description: Checks if new firmware is available for upgrade
      x-deviceSupport: both
      operationId: checkFirmware
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - newFirmware
                          properties:
                            newFirmware:
                              type: integer
                              description: Status of new firmware availability
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=UpgradeOnline:
    post:
      tags:
        - System
      summary: Start online upgrade
      description: Initiates online firmware upgrade when new version is available
      x-deviceSupport: both
      operationId: upgradeOnline
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=UpgradeStatus:
    post:
      tags:
        - System
      summary: Get upgrade status
      description: Checks the progress of firmware upgrade
      x-deviceSupport: both
      operationId: upgradeStatus
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Status
                          properties:
                            Status:
                              $ref: '#/components/schemas/UpgradeStatus'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetChannelStatus:
    post:
      tags:
        - System
        - NVR-only
      summary: Get channel status
      description: Returns status information for all NVR channels
      x-deviceSupport: nvr
      operationId: getChannelStatus
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - count
                            - status
                          properties:
                            count:
                              type: integer
                              description: Total number of channels
                            status:
                              type: array
                              items:
                                type: object
                                properties:
                                  channel:
                                    $ref: '#/components/schemas/Channel'
                                  name:
                                    type: string
                                    description: Channel name
                                  online:
                                    type: integer
                                    enum:
                                      - 0
                                      - 1
                                    description: |
                                      Channel online status
                                      * 0 - Offline
                                      * 1 - Online
                                  typeInfo:
                                    type: string
                                    description: Channel type information
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=Shutdown:
    post:
      tags:
        - System
      summary: Shutdown device
      description: Safely shuts down the device
      x-deviceSupport: both
      operationId: shutdown
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=Login:
    post:
      tags:
        - Security
      summary: Login to device
      description: |
        Authenticates user and returns a token for subsequent requests.
        Token is valid for 3600 seconds by default.
      x-deviceSupport: both
      operationId: login
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - User
                      properties:
                        User:
                          type: object
                          required:
                            - userName
                            - password
                          properties:
                            userName:
                              type: string
                              maxLength: 31
                              description: Username
                            password:
                              type: string
                              maxLength: 31
                              description: Password
                            Version:
                              type: string
                              enum:
                                - '0'
                                - '1'
                              default: '0'
                              description: |
                                Login version
                                * 0 - Don't use private encryption
                                * 1 - Use private encryption (not provided externally)
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Token
                          properties:
                            Token:
                              $ref: '#/components/schemas/TokenInfo'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=Logout:
    post:
      tags:
        - Security
      summary: Logout from device
      description: Invalidates the current session token
      x-deviceSupport: both
      operationId: logout
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetUser:
    post:
      tags:
        - Security
      summary: Get user list
      description: Returns list of configured users and their permissions
      x-deviceSupport: both
      operationId: getUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          properties:
                            User:
                              type: array
                              items:
                                $ref: '#/components/schemas/UserInfo'
                        initial:
                          type: object
                          properties:
                            User:
                              $ref: '#/components/schemas/UserInfo'
                        range:
                          type: object
                          properties:
                            User:
                              type: object
                              properties:
                                level:
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - guest
                                      - admin
                                userName:
                                  type: object
                                  properties:
                                    minLen:
                                      type: integer
                                      minimum: 1
                                    maxLen:
                                      type: integer
                                      maximum: 31
                                password:
                                  type: object
                                  properties:
                                    minLen:
                                      type: integer
                                      minimum: 6
                                    maxLen:
                                      type: integer
                                      maximum: 31
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=AddUser:
    post:
      tags:
        - Security
      summary: Add new user
      description: |
        Creates a new user account.
        Maximum of 20 users can be created.
      x-deviceSupport: both
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - User
                      properties:
                        User:
                          type: object
                          required:
                            - userName
                            - password
                            - level
                          properties:
                            userName:
                              type: string
                              minLength: 1
                              maxLength: 31
                              description: Username for new account
                            password:
                              type: string
                              minLength: 6
                              maxLength: 31
                              description: Password for new account
                            level:
                              type: string
                              enum:
                                - guest
                                - admin
                              description: Permission level for new account
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=DelUser:
    post:
      tags:
        - Security
      summary: Delete user
      description: Removes an existing user account
      x-deviceSupport: both
      operationId: delUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - User
                      properties:
                        User:
                          type: object
                          required:
                            - userName
                          properties:
                            userName:
                              type: string
                              minLength: 1
                              maxLength: 31
                              description: Username to delete
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=ModifyUser:
    post:
      tags:
        - Security
      summary: Modify user
      description: Modifies an existing user's password
      x-deviceSupport: both
      operationId: modifyUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - User
                      properties:
                        User:
                          type: object
                          required:
                            - userName
                            - newPassword
                          properties:
                            userName:
                              type: string
                              minLength: 1
                              maxLength: 31
                              description: Username to modify
                            newPassword:
                              type: string
                              minLength: 6
                              maxLength: 31
                              description: New password
                            oldPassword:
                              type: string
                              minLength: 6
                              maxLength: 31
                              description: Current password (required for validation)
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetOnline:
    post:
      tags:
        - Security
      summary: Get online users
      description: Returns list of currently connected users
      x-deviceSupport: both
      operationId: getOnline
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          properties:
                            User:
                              type: array
                              items:
                                $ref: '#/components/schemas/OnlineUserInfo'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=Disconnect:
    post:
      tags:
        - Security
      summary: Disconnect user
      description: Forces an online user to disconnect
      x-deviceSupport: both
      operationId: disconnect
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - User
                      properties:
                        User:
                          type: object
                          required:
                            - userName
                            - sessionId
                          properties:
                            userName:
                              type: string
                              description: Username to disconnect
                            sessionId:
                              type: integer
                              description: Session ID to disconnect
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetSysCfg:
    post:
      tags:
        - Security
      summary: Get login security settings
      description: Returns login lock time and attempt settings
      x-deviceSupport: both
      operationId: getSysCfg
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - SysCfg
                          properties:
                            SysCfg:
                              type: object
                              properties:
                                LockTime:
                                  type: integer
                                  minimum: 0
                                  maximum: 300
                                  description: Login lock time in seconds
                                allowedTimes:
                                  type: integer
                                  minimum: 0
                                  maximum: 5
                                  description: Maximum number of allowed login attempts
                                loginLock:
                                  type: integer
                                  enum:
                                    - 0
                                    - 1
                                  description: |
                                    Login lock status
                                    * 0 - Disabled
                                    * 1 - Enabled
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetSysCfg:
    post:
      tags:
        - Security
      summary: Set login security settings
      description: Configures login lock settings
      x-deviceSupport: both
      operationId: setSysCfg
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - SysCfg
                      properties:
                        SysCfg:
                          type: object
                          required:
                            - loginLock
                          properties:
                            loginLock:
                              type: integer
                              enum:
                                - 0
                                - 1
                              description: |
                                Login lock enable/disable
                                * 0 - Disable login lock
                                * 1 - Enable login lock
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetLocalLink:
    post:
      tags:
        - Network
      summary: Get network interface settings
      description: Returns current network interface configuration including IP settings and DNS
      x-deviceSupport: both
      operationId: getLocalLink
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - LocalLink
                          properties:
                            LocalLink:
                              $ref: '#/components/schemas/LocalLinkConfig'
                        initial:
                          type: object
                          properties:
                            LocalLink:
                              $ref: '#/components/schemas/LocalLinkConfig'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetLocalLink:
    post:
      tags:
        - Network
      summary: Set network interface settings
      description: Updates network interface configuration
      x-deviceSupport: both
      operationId: setLocalLink
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - LocalLink
                      properties:
                        LocalLink:
                          $ref: '#/components/schemas/LocalLinkConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetDdns:
    post:
      tags:
        - Network
      summary: Get DDNS settings
      description: Returns current DDNS service configuration
      x-deviceSupport: both
      operationId: getDdns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Ddns
                          properties:
                            Ddns:
                              $ref: '#/components/schemas/DDNSConfig'
                        initial:
                          type: object
                          properties:
                            Ddns:
                              $ref: '#/components/schemas/DDNSConfig'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetDdns:
    post:
      tags:
        - Network
      summary: Set DDNS settings
      description: Updates DDNS service configuration
      x-deviceSupport: both
      operationId: setDdns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Ddns
                      properties:
                        Ddns:
                          $ref: '#/components/schemas/DDNSConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetEmail:
    post:
      tags:
        - Network
      summary: Get email settings
      description: Returns current email service configuration including SMTP settings and notification schedules
      x-deviceSupport: both
      operationId: getEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Email
                          properties:
                            Email:
                              $ref: '#/components/schemas/EmailConfig'
                        initial:
                          type: object
                          properties:
                            Email:
                              $ref: '#/components/schemas/EmailConfig'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetEmail:
    post:
      tags:
        - Network
      summary: Set email settings
      description: Updates email service configuration including SMTP settings and notification schedules
      x-deviceSupport: both
      operationId: setEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Email
                      properties:
                        Email:
                          $ref: '#/components/schemas/EmailConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetEmailV20:
    post:
      tags:
        - Network
      summary: Get email settings (v2.0)
      description: Returns the email notification configuration (version 2.0)
      x-deviceSupport: both
      operationId: getEmailV20
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Email
                          properties:
                            Email:
                              $ref: '#/components/schemas/EmailConfigV20'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetEmailV20:
    post:
      tags:
        - Network
      summary: Set email settings (v2.0)
      description: Updates the email notification configuration (version 2.0)
      x-deviceSupport: both
      operationId: setEmailV20
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Email
                      properties:
                        Email:
                          $ref: '#/components/schemas/EmailConfigV20'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=TestEmail:
    post:
      tags:
        - Network
      summary: Test email settings
      description: Tests email configuration by sending a test message
      x-deviceSupport: both
      operationId: testEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Email
                      properties:
                        Email:
                          type: object
                          required:
                            - smtpServer
                            - smtpPort
                            - userName
                          properties:
                            smtpServer:
                              type: string
                              maxLength: 127
                              description: SMTP server address
                            smtpPort:
                              type: integer
                              minimum: 1
                              maximum: 65535
                              description: SMTP server port
                            userName:
                              type: string
                              maxLength: 127
                              description: SMTP account username
                            password:
                              type: string
                              maxLength: 31
                              description: SMTP account password
                            ssl:
                              $ref: '#/components/schemas/EnableSwitch'
                            addr1:
                              type: string
                              maxLength: 127
                              description: First recipient email address
                            addr2:
                              type: string
                              maxLength: 127
                              description: Second recipient email address
                            addr3:
                              type: string
                              maxLength: 127
                              description: Third recipient email address
                            nickName:
                              type: string
                              maxLength: 127
                              description: Sender nickname
      responses:
        '200':
          description: Test completed
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          $ref: '#/components/schemas/EmailTestResult'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetFtp:
    post:
      tags:
        - Network
      summary: Get FTP settings
      description: Returns current FTP service configuration (Legacy version)
      x-deviceSupport: both
      operationId: getFtp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Ftp
                          properties:
                            Ftp:
                              $ref: '#/components/schemas/FtpConfig'
                        initial:
                          type: object
                          properties:
                            Ftp:
                              $ref: '#/components/schemas/FtpConfig'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetFtp:
    post:
      tags:
        - Network
      summary: Set FTP settings
      description: Updates FTP service configuration (Legacy version)
      x-deviceSupport: both
      operationId: setFtp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Ftp
                      properties:
                        Ftp:
                          $ref: '#/components/schemas/FtpConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=TestFtp:
    post:
      tags:
        - Network
      summary: Test FTP settings
      description: Tests FTP configuration by attempting to connect and upload a test file
      x-deviceSupport: both
      operationId: testFtp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Ftp
                      properties:
                        Ftp:
                          type: object
                          required:
                            - server
                            - port
                            - anonymous
                            - mode
                            - remoteDir
                          properties:
                            server:
                              type: string
                              maxLength: 127
                              description: FTP server address
                            port:
                              type: integer
                              minimum: 1
                              maximum: 65535
                              description: FTP server port
                            anonymous:
                              type: integer
                              enum:
                                - 0
                                - 1
                              description: |
                                Use anonymous login
                                * 0 - Use credentials
                                * 1 - Anonymous login
                            userName:
                              type: string
                              maxLength: 127
                              description: FTP account username (required if not anonymous)
                            password:
                              type: string
                              maxLength: 127
                              description: FTP account password (required if not anonymous)
                            mode:
                              type: integer
                              enum:
                                - 0
                                - 1
                                - 2
                              description: |
                                Transfer mode
                                * 0 - Auto
                                * 1 - Active
                                * 2 - Passive
                            remoteDir:
                              type: string
                              maxLength: 255
                              description: Remote directory path
                            onlyFtps:
                              type: integer
                              enum:
                                - 0
                                - 1
                              description: |
                                Use FTPS encryption
                                * 0 - No encryption
                                * 1 - Use FTPS
                            bpicSingle:
                              type: integer
                              enum:
                                - 0
                                - 1
                                - 2
                              description: Image retention policy
                            bvideoSingle:
                              type: integer
                              enum:
                                - 0
                                - 1
                                - 2
                              description: Video retention policy
      responses:
        '200':
          description: Test completed
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          $ref: '#/components/schemas/FtpTestResult'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetNtp:
    post:
      tags:
        - Network
      summary: Get NTP settings
      description: Returns current NTP service configuration
      x-deviceSupport: both
      operationId: getNtp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Ntp
                          properties:
                            Ntp:
                              $ref: '#/components/schemas/NtpConfig'
                        initial:
                          type: object
                          properties:
                            Ntp:
                              $ref: '#/components/schemas/NtpConfig'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetNtp:
    post:
      tags:
        - Network
      summary: Set NTP settings
      description: Updates NTP service configuration
      x-deviceSupport: both
      operationId: setNtp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Ntp
                      properties:
                        Ntp:
                          $ref: '#/components/schemas/NtpConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetNetPort:
    post:
      tags:
        - Network
      summary: Get network port settings
      description: Returns current network service port configurations and their enable status
      x-deviceSupport: both
      operationId: getNetPort
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - NetPort
                          properties:
                            NetPort:
                              $ref: '#/components/schemas/NetworkPortConfig'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetNetPort:
    post:
      tags:
        - Network
      summary: Set network port settings
      description: Updates network service port configurations and their enable status
      x-deviceSupport: both
      operationId: setNetPort
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - NetPort
                      properties:
                        NetPort:
                          $ref: '#/components/schemas/NetworkPortConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetUpnp:
    post:
      tags:
        - Network
      summary: Get UPnP settings
      description: Returns current UPnP service configuration
      x-deviceSupport: both
      operationId: getUpnp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Upnp
                          properties:
                            Upnp:
                              $ref: '#/components/schemas/UpnpConfig'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetUpnp:
    post:
      tags:
        - Network
      summary: Set UPnP settings
      description: Updates UPnP service configuration
      x-deviceSupport: both
      operationId: setUpnp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Upnp
                      properties:
                        Upnp:
                          $ref: '#/components/schemas/UpnpConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetWifi:
    post:
      tags:
        - Network
        - IPC-only
      summary: Get WiFi settings
      description: Returns current WiFi configuration
      x-deviceSupport: ipc
      operationId: getWifi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Wifi
                          properties:
                            Wifi:
                              $ref: '#/components/schemas/WifiConfig'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetWifi:
    post:
      tags:
        - Network
        - IPC-only
      summary: Set WiFi settings
      description: Updates WiFi configuration
      x-deviceSupport: ipc
      operationId: setWifi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Wifi
                      properties:
                        Wifi:
                          $ref: '#/components/schemas/WifiConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=TestWifi:
    post:
      tags:
        - Network
        - IPC-only
      summary: Test WiFi connection
      description: Tests connection to specified WiFi network
      x-deviceSupport: ipc
      operationId: testWifi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Wifi
                      properties:
                        Wifi:
                          type: object
                          required:
                            - ssid
                          properties:
                            ssid:
                              type: string
                              description: Network SSID to test
                            password:
                              type: string
                              description: Network password (if required)
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=ScanWifi:
    post:
      tags:
        - Network
        - IPC-only
      summary: Scan for WiFi networks
      description: Scans and returns list of available WiFi networks
      x-deviceSupport: ipc
      operationId: scanWifi
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Wifi
                          properties:
                            Wifi:
                              type: array
                              items:
                                $ref: '#/components/schemas/WifiNetwork'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetWifiSignal:
    post:
      tags:
        - Network
        - IPC-only
      summary: Get WiFi signal strength
      description: Returns current WiFi signal strength
      x-deviceSupport: ipc
      operationId: getWifiSignal
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - wifiSignal
                          properties:
                            wifiSignal:
                              type: integer
                              minimum: 0
                              maximum: 100
                              description: WiFi signal strength percentage
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetPush:
    post:
      tags:
        - Network
      summary: Get push notification settings
      description: Returns the push notification configuration
      x-deviceSupport: both
      operationId: getPush
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Push
                          properties:
                            Push:
                              type: object
                              properties:
                                schedule:
                                  $ref: '#/components/schemas/PushSchedule'
                        initial:
                          type: object
                          properties:
                            Push:
                              $ref: '#/components/schemas/PushSchedule'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetPush:
    post:
      tags:
        - Network
      summary: Set push notification settings
      description: Updates the push notification configuration
      x-deviceSupport: both
      operationId: setPush
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Push
                      properties:
                        Push:
                          type: object
                          properties:
                            schedule:
                              $ref: '#/components/schemas/PushSchedule'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetPushV20:
    post:
      tags:
        - Network
      summary: Get push notification settings (v2.0)
      description: Returns the push notification configuration (version 2.0)
      x-deviceSupport: both
      operationId: getPushV20
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                    param:
                      type: object
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Push
                          properties:
                            Push:
                              $ref: '#/components/schemas/PushConfigV20'
                        initial:
                          type: object
                          properties:
                            Push:
                              $ref: '#/components/schemas/PushConfigV20'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetPushV20:
    post:
      tags:
        - Network
      summary: Set push notification settings (v2.0)
      description: Updates the push notification configuration (version 2.0)
      x-deviceSupport: both
      operationId: setPushV20
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Push
                      properties:
                        Push:
                          $ref: '#/components/schemas/PushConfigV20'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetP2p:
    post:
      tags:
        - Network
      summary: Get P2P settings
      description: Returns current P2P service configuration and device UID
      x-deviceSupport: both
      operationId: getP2p
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - P2p
                          properties:
                            P2p:
                              $ref: '#/components/schemas/P2pConfig'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetP2p:
    post:
      tags:
        - Network
      summary: Set P2P settings
      description: Updates P2P service configuration
      x-deviceSupport: both
      operationId: setP2p
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - P2p
                      properties:
                        P2p:
                          type: object
                          required:
                            - enable
                          properties:
                            enable:
                              $ref: '#/components/schemas/EnableSwitch'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetCertificateInfo:
    post:
      tags:
        - Network
      summary: Get certificate information
      description: Returns current SSL certificate configuration
      x-deviceSupport: both
      operationId: getCertificateInfo
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - CertificateInfo
                          properties:
                            CertificateInfo:
                              $ref: '#/components/schemas/CertificateInfo'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=CertificateClear:
    post:
      tags:
        - Network
      summary: Clear certificate
      description: Removes the custom SSL certificate and reverts to default
      x-deviceSupport: both
      operationId: certificateClear
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetRtspUrl:
    post:
      tags:
        - Network
      summary: Get RTSP URLs
      description: Returns RTSP stream URLs for the specified channel
      x-deviceSupport: both
      operationId: getRtspUrl
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - rtspUrl
                          properties:
                            rtspUrl:
                              $ref: '#/components/schemas/RtspUrlInfo'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetImage:
    post:
      tags:
        - Video Input
      summary: Get image settings
      description: Returns the current image settings like brightness, contrast, etc.
      x-deviceSupport: both
      operationId: getImage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Image
                          properties:
                            Image:
                              $ref: '#/components/schemas/ImageSettings'
                        initial:
                          type: object
                          properties:
                            Image:
                              $ref: '#/components/schemas/ImageSettings'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetImage:
    post:
      tags:
        - Video Input
      summary: Set image settings
      description: Updates the image settings like brightness, contrast, etc.
      x-deviceSupport: both
      operationId: setImage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Image
                      properties:
                        Image:
                          $ref: '#/components/schemas/ImageSettings'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetOsd:
    post:
      tags:
        - Video Input
      summary: Get OSD settings
      description: Returns the current on-screen display settings including channel name and time display
      x-deviceSupport: both
      operationId: getOsd
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Osd
                          properties:
                            Osd:
                              $ref: '#/components/schemas/OsdSettings'
                        initial:
                          type: object
                          properties:
                            Osd:
                              $ref: '#/components/schemas/OsdSettings'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetOsd:
    post:
      tags:
        - Video Input
      summary: Set OSD settings
      description: Updates the on-screen display settings including channel name and time display
      x-deviceSupport: both
      operationId: setOsd
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Osd
                      properties:
                        Osd:
                          $ref: '#/components/schemas/OsdSettings'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetIsp:
    post:
      tags:
        - Video Input
      summary: Get ISP settings
      description: Returns the current Image Signal Processing settings
      x-deviceSupport: both
      operationId: getIsp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Isp
                          properties:
                            Isp:
                              allOf:
                                - $ref: '#/components/schemas/IspSettings'
                                - type: object
                                  properties:
                                    bd_day:
                                      $ref: '#/components/schemas/BrightnessSettings'
                                    bd_night:
                                      $ref: '#/components/schemas/BrightnessSettings'
                                    bd_led_color:
                                      $ref: '#/components/schemas/BrightnessSettings'
                                    constantFrameRate:
                                      type: integer
                                      enum:
                                        - 0
                                        - 1
                                      description: |
                                        Frame rate priority
                                        * 0 - Quality priority
                                        * 1 - Fluency priority
                                    dayNightThreshold:
                                      type: integer
                                      minimum: 0
                                      description: Day/Night switching threshold
                                    cdsType:
                                      type: integer
                                      enum:
                                        - 0
                                        - 1
                                      description: |
                                        Light sensitivity mode
                                        * 0 - Hardware sensitivity
                                        * 1 - Software sensitivity
                        initial:
                          type: object
                          properties:
                            Isp:
                              $ref: '#/components/schemas/IspSettings'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetIsp:
    post:
      tags:
        - Video Input
      summary: Set ISP settings
      description: Updates the Image Signal Processing settings
      x-deviceSupport: both
      operationId: setIsp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Isp
                      properties:
                        Isp:
                          allOf:
                            - $ref: '#/components/schemas/IspSettings'
                            - type: object
                              required:
                                - channel
                              properties:
                                channel:
                                  $ref: '#/components/schemas/Channel'
                                bd_day:
                                  $ref: '#/components/schemas/BrightnessSettings'
                                bd_night:
                                  $ref: '#/components/schemas/BrightnessSettings'
                                bd_led_color:
                                  $ref: '#/components/schemas/BrightnessSettings'
                                constantFrameRate:
                                  type: integer
                                  enum:
                                    - 0
                                    - 1
                                dayNightThreshold:
                                  type: integer
                                  minimum: 0
                                cdsType:
                                  type: integer
                                  enum:
                                    - 0
                                    - 1
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetMask:
    post:
      tags:
        - Video Input
      summary: Get privacy mask settings
      description: Returns the current privacy mask zones configuration
      x-deviceSupport: both
      operationId: getMask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Mask
                          properties:
                            Mask:
                              type: object
                              properties:
                                area:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/MaskArea'
                                  maxItems: 4
                                  description: Up to 4 privacy mask areas can be defined
                                channel:
                                  $ref: '#/components/schemas/Channel'
                                enable:
                                  $ref: '#/components/schemas/EnableSwitch'
                        initial:
                          type: object
                          properties:
                            Mask:
                              type: object
                        range:
                          type: object
                          properties:
                            Mask:
                              type: object
                              properties:
                                maxAreas:
                                  type: integer
                                  enum:
                                    - 4
                                  description: Maximum number of privacy mask areas
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetMask:
    post:
      tags:
        - Video Input
      summary: Set privacy mask settings
      description: Configures privacy mask zones
      x-deviceSupport: both
      operationId: setMask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Mask
                      properties:
                        Mask:
                          type: object
                          required:
                            - channel
                            - enable
                            - area
                          properties:
                            channel:
                              $ref: '#/components/schemas/Channel'
                            enable:
                              $ref: '#/components/schemas/EnableSwitch'
                            area:
                              type: array
                              items:
                                $ref: '#/components/schemas/MaskArea'
                              maxItems: 4
                              description: Up to 4 privacy mask areas
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetCrop:
    post:
      tags:
        - Video Input
      summary: Get video crop settings
      description: Returns the current video cropping configuration
      x-deviceSupport: both
      operationId: getCrop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 0
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Crop
                          properties:
                            Crop:
                              $ref: '#/components/schemas/CropSettings'
                        initial:
                          type: object
                          properties:
                            Crop:
                              $ref: '#/components/schemas/CropSettings'
                        range:
                          type: object
                          properties:
                            Crop:
                              type: object
                              properties:
                                topLeftX:
                                  type: object
                                  properties:
                                    max:
                                      type: integer
                                    min:
                                      type: integer
                                topLeftY:
                                  type: object
                                  properties:
                                    max:
                                      type: integer
                                    min:
                                      type: integer
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetCrop:
    post:
      tags:
        - Video Input
      summary: Set video crop settings
      description: Updates the video cropping configuration
      x-deviceSupport: both
      operationId: setCrop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Crop
                      properties:
                        Crop:
                          allOf:
                            - $ref: '#/components/schemas/CropSettings'
                            - type: object
                              required:
                                - channel
                              properties:
                                channel:
                                  $ref: '#/components/schemas/Channel'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetStitch:
    post:
      tags:
        - Video Input
        - IPC-only
      summary: Get image stitch settings
      description: Returns the current image stitching configuration for binocular cameras
      x-deviceSupport: ipc
      operationId: getStitch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - stitch
                          properties:
                            stitch:
                              $ref: '#/components/schemas/StitchSettings'
                        initial:
                          type: object
                          properties:
                            stitch:
                              $ref: '#/components/schemas/StitchSettings'
                        range:
                          type: object
                          properties:
                            stitch:
                              type: object
                              properties:
                                distance:
                                  type: object
                                  properties:
                                    max:
                                      type: number
                                      format: float
                                      enum:
                                        - 20
                                    min:
                                      type: number
                                      format: float
                                      enum:
                                        - 2
                                stitchXMove:
                                  type: object
                                  properties:
                                    max:
                                      type: integer
                                      enum:
                                        - 100
                                    min:
                                      type: integer
                                      enum:
                                        - -100
                                stitchYMove:
                                  type: object
                                  properties:
                                    max:
                                      type: integer
                                      enum:
                                        - 100
                                    min:
                                      type: integer
                                      enum:
                                        - -100
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetStitch:
    post:
      tags:
        - Video Input
        - IPC-only
      summary: Set image stitch settings
      description: Updates the image stitching configuration for binocular cameras
      x-deviceSupport: ipc
      operationId: setStitch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - stitch
                      properties:
                        stitch:
                          allOf:
                            - $ref: '#/components/schemas/StitchSettings'
                            - type: object
                              required:
                                - distance
                                - stitchXMove
                                - stitchYMove
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetEnc:
    post:
      tags:
        - Encoding
      summary: Get encoding configuration
      description: Returns the current encoding configuration for main and sub streams
      x-deviceSupport: both
      operationId: getEnc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Enc
                          properties:
                            Enc:
                              $ref: '#/components/schemas/EncodingConfig'
                        initial:
                          type: object
                          properties:
                            Enc:
                              $ref: '#/components/schemas/EncodingConfig'
                        range:
                          type: object
                          properties:
                            Enc:
                              type: array
                              description: Array of supported encoding configurations
                              items:
                                allOf:
                                  - $ref: '#/components/schemas/EncodingConfig'
                                  - type: object
                                    properties:
                                      chnBit:
                                        type: integer
                                        description: Channel bit width
                                      mainStream:
                                        allOf:
                                          - $ref: '#/components/schemas/VideoStreamConfig'
                                          - type: object
                                            properties:
                                              bitRate:
                                                type: integer
                                              frameRate:
                                                type: integer
                                              default:
                                                type: object
                                                properties:
                                                  bitRate:
                                                    type: integer
                                                  frameRate:
                                                    type: integer
                                                  gop:
                                                    type: integer
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetEnc:
    post:
      tags:
        - Encoding
      summary: Set encoding configuration
      description: Updates the encoding configuration for main and sub streams
      x-deviceSupport: both
      operationId: setEnc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Enc
                      properties:
                        Enc:
                          allOf:
                            - $ref: '#/components/schemas/EncodingConfig'
                            - type: object
                              required:
                                - channel
                                - audio
                                - mainStream
                                - subStream
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetRec:
    post:
      tags:
        - Recording
      summary: Get recording configuration
      description: Returns the current recording configuration including schedules and settings
      x-deviceSupport: both
      operationId: getRec
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Rec
                          properties:
                            Rec:
                              $ref: '#/components/schemas/RecordingConfig'
                        initial:
                          type: object
                          properties:
                            Rec:
                              $ref: '#/components/schemas/RecordingConfig'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetRec:
    post:
      tags:
        - Recording
      summary: Set recording configuration
      description: Updates the recording configuration including schedules and settings
      x-deviceSupport: both
      operationId: setRec
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Rec
                      properties:
                        Rec:
                          $ref: '#/components/schemas/RecordingConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GeRecV20:
    post:
      tags:
        - Recording
        - NVR-only
      summary: Get enhanced recording configuration
      description: Returns the enhanced recording configuration (V20) including AI event schedules
      x-deviceSupport: nvr
      operationId: getRecV20
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                      description: Get configuration with ranges
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Rec
                          properties:
                            Rec:
                              $ref: '#/components/schemas/RecordingConfigV20'
                        initial:
                          type: object
                          properties:
                            Rec:
                              $ref: '#/components/schemas/RecordingConfigV20'
                        range:
                          type: object
                          description: Valid ranges for all parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetRecV20:
    post:
      tags:
        - Recording
        - NVR-only
      summary: Set enhanced recording configuration
      description: Updates the enhanced recording configuration (V20) including AI event schedules
      x-deviceSupport: nvr
      operationId: setRecV20
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Rec
                      properties:
                        Rec:
                          $ref: '#/components/schemas/RecordingConfigV20'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=Search:
    post:
      tags:
        - Recording
      summary: Search recordings
      description: |
        Searches for recordings based on time range and stream type.
        For large number of files, search might timeout.
      x-deviceSupport: both
      operationId: searchRecordings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Search
                      properties:
                        Search:
                          type: object
                          required:
                            - channel
                            - onlyStatus
                            - streamType
                            - StartTime
                            - EndTime
                          properties:
                            channel:
                              $ref: '#/components/schemas/Channel'
                            onlyStatus:
                              type: integer
                              enum:
                                - 0
                                - 1
                              description: |
                                Search type
                                * 0 - Get detailed file information
                                * 1 - Get only dates with recordings
                            streamType:
                              type: string
                              enum:
                                - main
                                - sub
                              description: Stream type to search for
                            StartTime:
                              $ref: '#/components/schemas/TimeConfig'
                            EndTime:
                              $ref: '#/components/schemas/TimeConfig'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - SearchResult
                          properties:
                            SearchResult:
                              type: object
                              properties:
                                channel:
                                  $ref: '#/components/schemas/Channel'
                                Status:
                                  type: array
                                  description: Only returned when onlyStatus=1
                                  items:
                                    type: object
                                    properties:
                                      year:
                                        type: integer
                                      mon:
                                        type: integer
                                      table:
                                        type: string
                                        description: String of 31 characters representing days with recordings
                                File:
                                  type: array
                                  description: Only returned when onlyStatus=0
                                  items:
                                    $ref: '#/components/schemas/RecordingFile'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=Download:
    post:
      tags:
        - Recording
      summary: Download recording
      description: Downloads a recording file
      x-deviceSupport: both
      operationId: downloadRecording
      parameters:
        - name: source
          in: query
          required: true
          schema:
            type: string
          description: Source recording file path
        - name: output
          in: query
          required: true
          schema:
            type: string
          description: Output filename
      responses:
        '200':
          $ref: '#/components/responses/FileDownload'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=Snap:
    post:
      tags:
        - Recording
      summary: Take snapshot
      description: Captures a snapshot image from the current video
      x-deviceSupport: both
      operationId: takeSnapshot
      parameters:
        - name: channel
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Channel'
        - name: rs
          in: query
          required: true
          schema:
            type: string
          description: Random string to prevent browser caching
      responses:
        '200':
          $ref: '#/components/responses/ImageResponse'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=Playback:
    post:
      tags:
        - Recording
      summary: Playback recording
      description: Streams a recording file for playback
      x-deviceSupport: both
      operationId: playbackRecording
      parameters:
        - name: source
          in: query
          required: true
          schema:
            type: string
          description: Source recording file path
        - name: output
          in: query
          required: true
          schema:
            type: string
          description: Output filename
      responses:
        '200':
          $ref: '#/components/responses/FileDownload'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=NvrDownload:
    post:
      tags:
        - Recording
        - NVR-only
      summary: NVR download recording
      description: Downloads recording files from NVR with enhanced options
      x-deviceSupport: nvr
      operationId: nvrDownload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - NvrDownload
                      properties:
                        NvrDownload:
                          type: object
                          required:
                            - channel
                            - StartTime
                            - EndTime
                          properties:
                            channel:
                              $ref: '#/components/schemas/Channel'
                            streamType:
                              type: string
                              enum:
                                - main
                                - sub
                              description: Stream type to download
                            StartTime:
                              $ref: '#/components/schemas/TimeConfig'
                            EndTime:
                              $ref: '#/components/schemas/TimeConfig'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          properties:
                            fileCount:
                              type: integer
                              description: Number of files in result
                            fileList:
                              type: array
                              items:
                                $ref: '#/components/schemas/NvrDownloadFile'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetPtzPreset:
    post:
      tags:
        - PTZ
      summary: Get PTZ preset positions
      description: Returns configured preset positions for PTZ camera
      x-deviceSupport: both
      operationId: getPtzPreset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - PtzPreset
                          properties:
                            PtzPreset:
                              type: array
                              items:
                                $ref: '#/components/schemas/PTZPreset'
                        initial:
                          type: object
                          properties:
                            PtzPreset:
                              type: array
                              items:
                                $ref: '#/components/schemas/PTZPreset'
                        range:
                          type: object
                          properties:
                            PtzPreset:
                              type: object
                              properties:
                                id:
                                  type: object
                                  properties:
                                    min:
                                      type: integer
                                      enum:
                                        - 1
                                    max:
                                      type: integer
                                      enum:
                                        - 64
                                name:
                                  type: object
                                  properties:
                                    maxLen:
                                      type: integer
                                      enum:
                                        - 31
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetPtzPreset:
    post:
      tags:
        - PTZ
      summary: Set PTZ preset position
      description: Creates or modifies a preset position for PTZ camera
      x-deviceSupport: both
      operationId: setPtzPreset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - PtzPreset
                      properties:
                        PtzPreset:
                          $ref: '#/components/schemas/PTZPreset'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetPtzPatrol:
    post:
      tags:
        - PTZ
      summary: Get PTZ patrol configuration
      description: Returns patrol (cruise) routes configuration for PTZ camera
      x-deviceSupport: both
      operationId: getPtzPatrol
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - PtzPatrol
                          properties:
                            PtzPatrol:
                              type: array
                              items:
                                $ref: '#/components/schemas/PTZPatrol'
                        range:
                          type: object
                          properties:
                            PtzPatrol:
                              type: object
                              properties:
                                enable:
                                  type: string
                                  enum:
                                    - boolean
                                id:
                                  type: object
                                  properties:
                                    max:
                                      type: integer
                                      enum:
                                        - 6
                                    min:
                                      type: integer
                                      enum:
                                        - 1
                                name:
                                  type: object
                                  properties:
                                    maxLen:
                                      type: integer
                                      enum:
                                        - 31
                                running:
                                  type: string
                                  enum:
                                    - boolean
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetPtzPatrol:
    post:
      tags:
        - PTZ
      summary: Set PTZ patrol configuration
      description: |
        Configures patrol (cruise) routes for PTZ camera.
        Supports up to 16 preset points per patrol route.
      x-deviceSupport: both
      operationId: setPtzPatrol
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - PtzPatrol
                      properties:
                        PtzPatrol:
                          allOf:
                            - $ref: '#/components/schemas/PTZPatrol'
                            - type: object
                              properties:
                                preset:
                                  type: array
                                  maxItems: 16
                                  description: List of preset points in patrol route
                                  items:
                                    type: object
                                    required:
                                      - id
                                      - speed
                                      - dwellTime
                                    properties:
                                      id:
                                        type: integer
                                        minimum: 1
                                        maximum: 64
                                        description: Preset point ID to visit
                                      speed:
                                        type: integer
                                        minimum: 1
                                        maximum: 64
                                        description: Movement speed to preset point
                                      dwellTime:
                                        type: integer
                                        minimum: 1
                                        maximum: 30
                                        description: Time to stay at preset point (seconds)
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=PtzCtrl:
    post:
      tags:
        - PTZ
      summary: Control PTZ movement
      description: |
        Controls PTZ camera movement and operations.
        Speed parameter range is 1-64.
        For ToPos operation, id parameter specifies the preset position to move to.
      x-deviceSupport: both
      operationId: ptzCtrl
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                        - op
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
                        op:
                          $ref: '#/components/schemas/PTZOperation'
                        speed:
                          type: integer
                          minimum: 1
                          maximum: 64
                          description: Movement speed
                        id:
                          type: integer
                          minimum: 1
                          maximum: 64
                          description: Preset position ID (for ToPos operation)
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetPtzSerial:
    post:
      tags:
        - PTZ
      summary: Get PTZ serial port configuration
      description: Returns the serial port configuration used for PTZ control
      x-deviceSupport: ipc
      operationId: getPtzSerial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - PtzSerial
                          properties:
                            PtzSerial:
                              $ref: '#/components/schemas/SerialConfig'
                        initial:
                          type: object
                          properties:
                            PtzSerial:
                              $ref: '#/components/schemas/SerialConfig'
                        range:
                          type: object
                          properties:
                            PtzSerial:
                              type: object
                              properties:
                                baudRate:
                                  type: array
                                  items:
                                    type: integer
                                  example:
                                    - 1200
                                    - 2400
                                    - 4800
                                    - 9600
                                channel:
                                  type: integer
                                  const: 0
                                ctrlAddr:
                                  type: object
                                  properties:
                                    max:
                                      type: integer
                                      example: 64
                                    min:
                                      type: integer
                                      example: 1
                                ctrlProtocol:
                                  type: array
                                  items:
                                    type: string
                                  example:
                                    - PELCO_D
                                    - PELCO_P
                                dataBit:
                                  type: array
                                  items:
                                    type: string
                                  example:
                                    - CS8
                                    - CS7
                                    - CS6
                                    - CS5
                                flowCtrl:
                                  type: array
                                  items:
                                    type: string
                                  example:
                                    - none
                                    - hard
                                    - xon
                                    - xoff
                                parity:
                                  type: array
                                  items:
                                    type: string
                                  example:
                                    - none
                                    - odd
                                    - even
                                stopBit:
                                  type: array
                                  items:
                                    type: integer
                                  example:
                                    - 1
                                    - 2
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetPtzSerial:
    post:
      tags:
        - PTZ
      summary: Set PTZ serial configuration
      description: Configures the PTZ serial port settings
      x-deviceSupport: both
      operationId: setPtzSerial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - PtzSerial
                      properties:
                        PtzSerial:
                          type: object
                          properties:
                            PtzSerial:
                              $ref: '#/components/schemas/SerialConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetPtzTattern:
    post:
      tags:
        - PTZ
      summary: Get PTZ pattern configuration
      description: Returns the configured PTZ movement patterns
      x-deviceSupport: both
      operationId: getPtzTattern
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - PtzTattern
                          properties:
                            PtzTattern:
                              allOf:
                                - $ref: '#/components/schemas/PTZPattern'
                                - type: object
                                  properties:
                                    track:
                                      minItems: 6
                                      maxItems: 6
                                      description: Fixed array of 6 pattern tracks
                        initial:
                          type: object
                          properties:
                            PtzTattern:
                              $ref: '#/components/schemas/PTZPattern'
                        range:
                          type: object
                          properties:
                            PtzTattern:
                              type: object
                              properties:
                                track:
                                  type: object
                                  properties:
                                    id:
                                      type: object
                                      properties:
                                        min:
                                          type: integer
                                          enum:
                                            - 1
                                        max:
                                          type: integer
                                          enum:
                                            - 6
                                    enable:
                                      type: string
                                      enum:
                                        - boolean
                                    running:
                                      type: string
                                      enum:
                                        - boolean
                                    name:
                                      type: object
                                      properties:
                                        maxLen:
                                          type: integer
                                          enum:
                                            - 191
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetPtzTattern:
    post:
      tags:
        - PTZ
      summary: Set PTZ pattern configuration
      description: |
        Configures PTZ movement patterns.
        Each pattern is a recorded series of PTZ movements that can be played back.
      x-deviceSupport: both
      operationId: setPtzTattern
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - PtzTattern
                      properties:
                        PtzTattern:
                          type: object
                          required:
                            - channel
                            - track
                          properties:
                            channel:
                              $ref: '#/components/schemas/Channel'
                            track:
                              type: array
                              minItems: 1
                              maxItems: 6
                              description: Array of pattern tracks to configure
                              items:
                                type: object
                                required:
                                  - id
                                properties:
                                  id:
                                    type: integer
                                    minimum: 1
                                    maximum: 6
                                    description: Pattern track ID
                                  enable:
                                    $ref: '#/components/schemas/EnableSwitch'
                                  running:
                                    type: integer
                                    enum:
                                      - 0
                                      - 1
                                    description: |
                                      Running status
                                      * 0 - Stopped
                                      * 1 - Running
                                  name:
                                    type: string
                                    maxLength: 191
                                    description: Name of the pattern track
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetAutoFocus:
    post:
      tags:
        - PTZ
      summary: Get auto focus configuration
      description: Returns the current auto focus settings
      x-deviceSupport: both
      operationId: getAutoFocus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - AutoFocus
                          properties:
                            AutoFocus:
                              $ref: '#/components/schemas/AutoFocusConfig'
                        initial:
                          type: object
                          properties:
                            AutoFocus:
                              $ref: '#/components/schemas/AutoFocusConfig'
                        range:
                          type: object
                          properties:
                            AutoFocus:
                              type: object
                              properties:
                                disable:
                                  type: string
                                  enum:
                                    - boolean
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetAutoFocus:
    post:
      tags:
        - PTZ
      summary: Set auto focus configuration
      description: Enables or disables the auto focus feature
      x-deviceSupport: both
      operationId: setAutoFocus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - AutoFocus
                      properties:
                        AutoFocus:
                          type: object
                          required:
                            - channel
                            - disable
                          properties:
                            channel:
                              $ref: '#/components/schemas/Channel'
                            disable:
                              type: integer
                              enum:
                                - 0
                                - 1
                              description: |
                                Auto focus state
                                * 0 - Enable auto focus
                                * 1 - Disable auto focus
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=StartZoomFocus:
    post:
      tags:
        - PTZ
      summary: Control zoom and focus position
      description: Adjusts the zoom and focus to specific positions
      x-deviceSupport: both
      operationId: startZoomFocus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - ZoomFocus
                      properties:
                        ZoomFocus:
                          type: object
                          required:
                            - channel
                            - op
                            - pos
                          properties:
                            channel:
                              $ref: '#/components/schemas/Channel'
                            op:
                              type: string
                              enum:
                                - ZoomPos
                                - FocusPos
                              description: |
                                Operation type
                                * ZoomPos - Set zoom position
                                * FocusPos - Set focus position
                            pos:
                              type: integer
                              description: Target position value
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetPtzGuard:
    post:
      tags:
        - PTZ
      summary: Get PTZ guard position settings
      description: Returns the guard position configuration
      x-deviceSupport: both
      operationId: getPtzGuard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 0
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - PtzGuard
                          properties:
                            PtzGuard:
                              $ref: '#/components/schemas/PTZGuardConfig'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetPtzGuard:
    post:
      tags:
        - PTZ
      summary: Set PTZ guard position
      description: |
        Configures the guard position and its settings.
        The guard position is a preset position the camera returns to after a period of inactivity.
      x-deviceSupport: both
      operationId: setPtzGuard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - PtzGuard
                      properties:
                        PtzGuard:
                          type: object
                          required:
                            - channel
                            - cmdStr
                          properties:
                            channel:
                              $ref: '#/components/schemas/Channel'
                            cmdStr:
                              type: string
                              enum:
                                - setPos
                                - toPos
                              description: |
                                Command type
                                * setPos - Set current position as guard position
                                * toPos - Move to guard position
                            benable:
                              type: integer
                              enum:
                                - 0
                                - 1
                              description: |
                                Enable automatic return to guard position
                                * 0 - Disabled
                                * 1 - Enabled
                            timeout:
                              type: integer
                              enum:
                                - 60
                              description: Time in seconds before returning to guard position (fixed at 60)
                            bSaveCurrentPos:
                              type: integer
                              enum:
                                - 0
                                - 1
                              description: |
                                Whether to save current position as guard position
                                * 0 - No
                                * 1 - Yes
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetPtzCheckState:
    post:
      tags:
        - PTZ
        - NVR-only
      summary: Get PTZ check state
      description: Returns the current state of PTZ self-check process
      x-deviceSupport: nvr
      operationId: getPtzCheckState
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 0
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - PtzCheckState
                          properties:
                            PtzCheckState:
                              $ref: '#/components/schemas/PTZCheckState'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=PtzCheck:
    post:
      tags:
        - PTZ
        - NVR-only
      summary: Start PTZ self-check
      description: Initiates the PTZ camera self-check procedure
      x-deviceSupport: nvr
      operationId: ptzCheck
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetAlarm:
    post:
      tags:
        - Alarm
      summary: Get alarm settings
      description: Returns the current alarm configuration including motion detection areas and sensitivity
      x-deviceSupport: both
      operationId: getAlarm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    action:
                      type: integer
                      enum:
                        - 1
                    param:
                      type: object
                      required:
                        - Alarm
                      properties:
                        Alarm:
                          type: object
                          required:
                            - type
                            - channel
                          properties:
                            type:
                              type: string
                              enum:
                                - md
                              description: Alarm type (currently only motion detection supported)
                            channel:
                              $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Alarm
                          properties:
                            Alarm:
                              type: object
                              properties:
                                channel:
                                  $ref: '#/components/schemas/Channel'
                                type:
                                  type: string
                                  enum:
                                    - md
                                scope:
                                  $ref: '#/components/schemas/AlarmArea'
                                sens:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/AlarmSensitivity'
                        initial:
                          type: object
                          description: Initial configuration values
                        range:
                          type: object
                          description: Valid ranges for parameters
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetAlarm:
    post:
      tags:
        - Alarm
      summary: Set alarm configuration
      description: Updates the alarm configuration including motion detection areas and sensitivity
      x-deviceSupport: both
      operationId: setAlarm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Alarm
                      properties:
                        Alarm:
                          type: object
                          required:
                            - channel
                            - type
                          properties:
                            channel:
                              $ref: '#/components/schemas/Channel'
                            type:
                              type: string
                              enum:
                                - md
                            scope:
                              $ref: '#/components/schemas/AlarmArea'
                            sens:
                              type: array
                              items:
                                $ref: '#/components/schemas/AlarmSensitivity'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetMdAlarm:
    post:
      tags:
        - Alarm
      summary: Get advanced motion detection settings
      description: Returns the advanced motion detection alarm configuration including AI detection types
      x-deviceSupport: both
      operationId: getMdAlarm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          properties:
                            MdAlarm:
                              allOf:
                                - $ref: '#/components/schemas/MdAlarmConfig'
                                - type: object
                                  properties:
                                    scope:
                                      $ref: '#/components/schemas/AlarmArea'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetMdAlarm:
    post:
      tags:
        - Alarm
      summary: Set advanced motion detection settings
      description: Updates the advanced motion detection alarm configuration
      x-deviceSupport: both
      operationId: setMdAlarm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - MdAlarm
                      properties:
                        MdAlarm:
                          allOf:
                            - $ref: '#/components/schemas/MdAlarmConfig'
                            - type: object
                              properties:
                                scope:
                                  $ref: '#/components/schemas/AlarmArea'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetMdState:
    post:
      tags:
        - Alarm
      summary: Get motion detection state
      description: Returns the current motion detection status
      x-deviceSupport: both
      operationId: getMdState
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - state
                          properties:
                            state:
                              type: integer
                              enum:
                                - 0
                                - 1
                              description: |
                                Motion detection state
                                * 0 - No motion detected
                                * 1 - Motion detected
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetAudioAlarm:
    post:
      tags:
        - Alarm
      summary: Get audio alarm settings
      description: Returns the audio alarm configuration
      x-deviceSupport: both
      operationId: getAudioAlarm
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Audio
                          properties:
                            Audio:
                              type: object
                              properties:
                                schedule:
                                  type: object
                                  properties:
                                    enable:
                                      $ref: '#/components/schemas/EnableSwitch'
                                    table:
                                      $ref: '#/components/schemas/ScheduleTable'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetAudioAlarm:
    post:
      tags:
        - Alarm
      summary: Set audio alarm settings
      description: Updates the audio alarm configuration
      x-deviceSupport: both
      operationId: setAudioAlarm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Audio
                      properties:
                        Audio:
                          type: object
                          properties:
                            schedule:
                              type: object
                              properties:
                                enable:
                                  $ref: '#/components/schemas/EnableSwitch'
                                table:
                                  $ref: '#/components/schemas/ScheduleTable'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetAudioAlarmV20:
    post:
      tags:
        - Alarm
      summary: Get enhanced audio alarm settings
      description: Returns the enhanced audio alarm configuration (v2.0)
      x-deviceSupport: both
      operationId: getAudioAlarmV20
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Audio
                          properties:
                            Audio:
                              type: object
                              properties:
                                enable:
                                  $ref: '#/components/schemas/EnableSwitch'
                                schedule:
                                  type: object
                                  properties:
                                    channel:
                                      $ref: '#/components/schemas/Channel'
                                    table:
                                      type: object
                                      properties:
                                        MD:
                                          $ref: '#/components/schemas/ScheduleTable'
                                        AI_PEOPLE:
                                          $ref: '#/components/schemas/ScheduleTable'
                                        AI_VEHICLE:
                                          $ref: '#/components/schemas/ScheduleTable'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetAudioAlarmV20:
    post:
      tags:
        - Alarm
      summary: Set enhanced audio alarm settings
      description: Updates the enhanced audio alarm configuration (v2.0)
      x-deviceSupport: both
      operationId: setAudioAlarmV20
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Audio
                      properties:
                        Audio:
                          type: object
                          properties:
                            enable:
                              $ref: '#/components/schemas/EnableSwitch'
                            schedule:
                              type: object
                              properties:
                                channel:
                                  $ref: '#/components/schemas/Channel'
                                table:
                                  type: object
                                  properties:
                                    MD:
                                      $ref: '#/components/schemas/ScheduleTable'
                                    AI_PEOPLE:
                                      $ref: '#/components/schemas/ScheduleTable'
                                    AI_VEHICLE:
                                      $ref: '#/components/schemas/ScheduleTable'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetBuzzerAlarmV20:
    post:
      tags:
        - Alarm
        - NVR-only
      summary: Get buzzer alarm settings
      description: Returns the buzzer alarm configuration (NVR only)
      x-deviceSupport: nvr
      operationId: getBuzzerAlarmV20
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - Buzzer
                          properties:
                            Buzzer:
                              type: object
                              properties:
                                enable:
                                  $ref: '#/components/schemas/EnableSwitch'
                                diskErrorAlert:
                                  $ref: '#/components/schemas/EnableSwitch'
                                diskFullAlert:
                                  $ref: '#/components/schemas/EnableSwitch'
                                ipConflictAlert:
                                  $ref: '#/components/schemas/EnableSwitch'
                                nvrDisconnectAlert:
                                  $ref: '#/components/schemas/EnableSwitch'
                                schedule:
                                  type: object
                                  properties:
                                    channel:
                                      $ref: '#/components/schemas/Channel'
                                    table:
                                      type: object
                                      properties:
                                        MD:
                                          $ref: '#/components/schemas/ScheduleTable'
                                        AI_PEOPLE:
                                          $ref: '#/components/schemas/ScheduleTable'
                                        AI_VEHICLE:
                                          $ref: '#/components/schemas/ScheduleTable'
                                        VL:
                                          $ref: '#/components/schemas/ScheduleTable'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetBuzzerAlarmV20:
    post:
      tags:
        - Alarm
        - NVR-only
      summary: Set buzzer alarm settings
      description: Updates the buzzer alarm configuration (NVR only)
      x-deviceSupport: nvr
      operationId: setBuzzerAlarmV20
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - Buzzer
                      properties:
                        Buzzer:
                          type: object
                          properties:
                            enable:
                              $ref: '#/components/schemas/EnableSwitch'
                            diskErrorAlert:
                              $ref: '#/components/schemas/EnableSwitch'
                            diskFullAlert:
                              $ref: '#/components/schemas/EnableSwitch'
                            ipConflictAlert:
                              $ref: '#/components/schemas/EnableSwitch'
                            nvrDisconnectAlert:
                              $ref: '#/components/schemas/EnableSwitch'
                            schedule:
                              type: object
                              properties:
                                channel:
                                  $ref: '#/components/schemas/Channel'
                                table:
                                  type: object
                                  properties:
                                    MD:
                                      $ref: '#/components/schemas/ScheduleTable'
                                    AI_PEOPLE:
                                      $ref: '#/components/schemas/ScheduleTable'
                                    AI_VEHICLE:
                                      $ref: '#/components/schemas/ScheduleTable'
                                    VL:
                                      $ref: '#/components/schemas/ScheduleTable'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=AudioAlarmPlay:
    post:
      tags:
        - Alarm
      summary: Play audio alarm
      description: Triggers the audio alarm to play
      x-deviceSupport: both
      operationId: audioAlarmPlay
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      properties:
                        alarm_mode:
                          type: string
                          enum:
                            - times
                            - manu
                          description: |
                            Alarm mode
                            * times - Play specified number of times
                            * manu - Manual control
                        manual_switch:
                          type: integer
                          enum:
                            - 0
                            - 1
                          description: Manual control switch
                        times:
                          type: integer
                          minimum: 1
                          description: Number of times to play alarm
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetIrLights:
    post:
      tags:
        - LED
      summary: Get IR light settings
      description: Returns the current IR light configuration
      x-deviceSupport: both
      operationId: getIrLights
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - IrLights
                          properties:
                            IrLights:
                              type: object
                              properties:
                                state:
                                  $ref: '#/components/schemas/LedState'
        '401':
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetIrLights:
    post:
      tags:
        - LED
      summary: Set IR light settings
      description: Configure IR light operation
      x-deviceSupport: both
      operationId: setIrLights
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - IrLights
                      properties:
                        IrLights:
                          type: object
                          required:
                            - state
                          properties:
                            state:
                              $ref: '#/components/schemas/LedState'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetPowerLed:
    post:
      tags:
        - LED
      summary: Get power LED status
      description: Returns the current power LED state
      x-deviceSupport: both
      operationId: getPowerLed
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - PowerLed
                          properties:
                            PowerLed:
                              type: object
                              properties:
                                state:
                                  type: string
                                  enum:
                                    - 'On'
                                    - 'Off'
                                  description: Power LED state
        '401':
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetPowerLed:
    post:
      tags:
        - LED
      summary: Set power LED status
      description: Configure power LED operation
      x-deviceSupport: both
      operationId: setPowerLed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - PowerLed
                      properties:
                        PowerLed:
                          type: object
                          required:
                            - state
                          properties:
                            state:
                              type: string
                              enum:
                                - 'On'
                                - 'Off'
                              description: Power LED state
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetWhiteLed:
    post:
      tags:
        - LED
      summary: Get white LED settings
      description: Returns the current white LED configuration
      x-deviceSupport: both
      operationId: getWhiteLed
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - WhiteLed
                          properties:
                            WhiteLed:
                              $ref: '#/components/schemas/WhiteLedConfig'
        '401':
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetWhiteLed:
    post:
      tags:
        - LED
      summary: Set white LED settings
      description: Configure white LED operation
      x-deviceSupport: both
      operationId: setWhiteLed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - WhiteLed
                      properties:
                        WhiteLed:
                          $ref: '#/components/schemas/WhiteLedConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetAiAlarm:
    post:
      tags:
        - LED
        - AI
      summary: Get AI alarm LED settings
      description: Returns the current AI-based alarm LED configuration
      x-deviceSupport: both
      operationId: getAiAlarm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                        - ai_type
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
                        ai_type:
                          type: string
                          enum:
                            - people
                            - vehicle
                            - dog_cat
                          description: Type of AI detection
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          properties:
                            sensitivity:
                              type: integer
                              minimum: 1
                              maximum: 100
                            stay_time:
                              type: integer
                              minimum: 0
                            width:
                              type: integer
                            height:
                              type: integer
                            scope:
                              type: object
                              properties:
                                area:
                                  type: string
                                  description: Detection area configuration
        '401':
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetAiAlarm:
    post:
      tags:
        - LED
        - AI
      summary: Set AI alarm LED settings
      description: Configure AI-based alarm LED operation
      x-deviceSupport: both
      operationId: setAiAlarm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                        - AiAlarm
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
                        AiAlarm:
                          type: object
                          properties:
                            ai_type:
                              type: string
                              enum:
                                - people
                                - vehicle
                                - dog_cat
                            sensitivity:
                              type: integer
                              minimum: 1
                              maximum: 100
                            stay_time:
                              type: integer
                              minimum: 0
                            scope:
                              type: object
                              properties:
                                area:
                                  type: string
                                  description: Detection area configuration
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetAlarmArea:
    post:
      tags:
        - LED
        - AI
      summary: Set alarm detection area
      description: Configure the area for AI-based alarm detection
      x-deviceSupport: both
      operationId: setAlarmArea
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                        - ai_type
                        - width
                        - height
                        - area
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
                        ai_type:
                          type: string
                          enum:
                            - people
                            - vehicle
                            - dog_cat
                          description: Type of AI detection
                        width:
                          type: integer
                          description: Width of detection area grid
                        height:
                          type: integer
                          description: Height of detection area grid
                        area:
                          type: string
                          description: Binary string representing detection area grid
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetAiCfg:
    post:
      tags:
        - AI
      summary: Get AI configuration
      description: Returns the current AI detection and tracking configuration
      x-deviceSupport: both
      operationId: getAiCfg
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          properties:
                            AiDetectType:
                              $ref: '#/components/schemas/AiDetectTypes'
                            aiTrack:
                              $ref: '#/components/schemas/EnableSwitch'
                            channel:
                              $ref: '#/components/schemas/Channel'
                            trackType:
                              $ref: '#/components/schemas/AiTrackTypes'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=SetAiCfg:
    post:
      tags:
        - AI
      summary: Set AI configuration
      description: Updates the AI detection and tracking configuration
      x-deviceSupport: both
      operationId: setAiCfg
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        aiTrack:
                          type: integer
                          enum:
                            - 0
                            - 1
                          description: Enable/disable AI tracking
                        trackType:
                          $ref: '#/components/schemas/AiTrackTypes'
                        AiDetectType:
                          $ref: '#/components/schemas/AiDetectTypes'
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
  /api.cgi?cmd=GetAiState:
    post:
      tags:
        - AI
      summary: Get AI detection states
      description: Returns the current state of AI detection types
      x-deviceSupport: both
      operationId: getAiState
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseCommandRequest'
                - type: object
                  properties:
                    param:
                      type: object
                      required:
                        - channel
                      properties:
                        channel:
                          $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/BaseCommandResponse'
                    - type: object
                      properties:
                        value:
                          type: object
                          required:
                            - channel
                          properties:
                            channel:
                              $ref: '#/components/schemas/Channel'
                            dog_cat:
                              $ref: '#/components/schemas/AiDetectionState'
                            face:
                              $ref: '#/components/schemas/AiDetectionState'
                            people:
                              $ref: '#/components/schemas/AiDetectionState'
                            vehicle:
                              $ref: '#/components/schemas/AiDetectionState'
        '401':
          $ref: '#/components/responses/Error'
        4XX:
          $ref: '#/components/responses/Error'
components:
  parameters:
    cmd:
      name: cmd
      in: query
      required: true
      schema:
        type: string
      description: API command to execute
    token:
      name: token
      in: query
      required: false
      schema:
        type: string
      description: Authentication token obtained from Login command
    channel:
      name: channel
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/Channel'
      description: Channel number to operate on
    streamType:
      name: streamType
      in: query
      required: false
      schema:
        type: string
        enum:
          - main
          - ext
          - sub
      description: |
        Video stream type
        * main - Main stream
        * ext - Extended stream
        * sub - Sub stream
    source:
      name: source
      in: query
      required: false
      schema:
        type: string
      description: Source file path/name for download/playback operations
    output:
      name: output
      in: query
      required: false
      schema:
        type: string
      description: Output filename for download operations
    clearConfig:
      name: clearConfig
      in: query
      required: false
      schema:
        type: integer
        enum:
          - 0
          - 1
      description: |
        Whether to clear configuration during operation
        * 0 - Keep existing configuration
        * 1 - Clear configuration
  schemas:
    BaseCommandRequest:
      type: object
      required:
        - cmd
      properties:
        cmd:
          type: string
          description: Command name
        action:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Action type
            * 0 - Set/execute command
            * 1 - Get command with initial values and ranges
        param:
          type: object
          description: Command parameters
    ErrorResponse:
      type: object
      required:
        - rspCode
      properties:
        rspCode:
          type: integer
          enum:
            - -1
            - -2
            - -3
            - -4
            - -5
            - -6
            - -7
            - -8
            - -9
            - -10
            - -11
            - -12
            - -13
            - -14
            - -15
            - -16
            - -17
            - -18
            - -19
            - -20
            - -21
            - -22
            - -23
            - -24
            - -25
            - -26
            - -27
            - -28
            - -29
            - -30
            - -31
            - -32
            - -34
            - -35
            - -36
            - -37
            - -38
            - -39
            - -40
            - -41
            - -42
            - -43
            - -44
            - -45
            - -46
            - -47
            - -48
            - -49
            - -99
            - -100
            - -101
            - -102
            - -103
            - -105
            - -220
            - -221
            - -222
            - -301
            - -310
            - -451
            - -452
            - -453
            - -454
            - -480
            - -481
            - -482
            - -483
            - -484
            - -485
            - -500
            - -501
            - -502
            - -503
            - -505
            - -506
            - -507
          description: |
            Error response code:
            * -1 - Missing parameters
            * -2 - Used up memory
            * -3 - Check error
            * -4 - Parameters error
            * -5 - Reached the max session number.
            * -6 - Login required
            * -7 - Login error
            * -8 - Operation timeout
            * -9 - Not supported
            * -10 - Protocol error
            * -11 - Failed to read operation
            * -12 - Failed to get configuration.
            * -13 - Failed to set configuration.
            * -14 - Failed to apply for memory
            * -15 - Failed to created socket
            * -16 - Failed to send data
            * -17 - Failed to receiver data
            * -18 - Failed to open file
            * -19 - Failed to read file
            * -20 - Failed to write file
            * -21 - Token error
            * -22 - The length of the string exceeds the limitation
            * -23 - Missing parameters
            * -24 - Command error
            * -25 - Internal error
            * -26 - Ability error
            * -27 - Invalid user
            * -28 - User already exist
            * -29 - Reached the maximum number of users
            * -30 - The version is identical to the current one.
            * -31 - Ensure only one user can upgrade
            * -32 - Modify IP conflicted with used IP
            * -34 - Cloud login need bind email first
            * -35 - Cloud login unbind camera
            * -36 - Cloud login get login information out of time
            * -37 - Cloud login password error
            * -38 - Cloud bind camera uid error
            * -39 - Cloud login user doesn’t exist
            * -40 - Cloud unbind camera failed
            * -41 - The device doesn’t support cloud
            * -42 - Cloud login server failed
            * -43 - Cloud bind camera failed
            * -44 - Cloud unknown error
            * -45 - Cloud bind camera need verify code
            * -46 - An error occurred while using the digest authentication process
            * -47 - Nonce expires Abstract An expired nonce is used in the authentication process
            * -48 - Snap a picture failed
            * -49 - Channel is invalid
            * -99 - Device offline
            * -100 - Test Email,Ftp,Wifi failed
            * -101 - Upgrade checking firmware failed
            * -102 - Upgrade download online failed
            * -103 - Upgrade get upgrade status failed
            * -105 - Frequent logins
            * -220 - Error downloading video file
            * -221 - Busy video recording task
            * -222 - The video file does not exist
            * -301 - Digest Authentication nonce error
            * -310 - Aes decryption failure
            * -451 - ftp test login failed
            * -452 - Create ftp dir failed
            * -453 - Upload ftp file failed
            * -454 - Cannot connect ftp server
            * -480 - Some undefined errors
            * -481 - Cannot connect email server
            * -482 - Auth user failed
            * -483 - Email network err
            * -484 - Something wrong with email server
            * -485 - Something wrong with memory
            * -500 - The number of IP addresses reaches the upper limit
            * -501 - The user does not exist
            * -502 - Password err
            * -503 - Login deny
            * -505 - Login not init
            * -506 - Login locked
            * -507 - The number of logins reached the upper limit
        detail:
          type: string
          description: Error message details
    BaseCommandResponse:
      type: object
      required:
        - cmd
        - code
      properties:
        cmd:
          type: string
          description: Command name that was executed
        code:
          type: integer
          description: Response code (0 for success)
        value:
          type: object
          description: Response data when successful
        error:
          $ref: '#/components/schemas/ErrorResponse'
          description: Error information when request fails
    Channel:
      type: integer
      minimum: 0
      description: Channel number (0 for IPC devices)
      example: 0
    TimeConfig:
      type: object
      properties:
        year:
          type: integer
          minimum: 1900
          maximum: 2100
          description: Year
        mon:
          type: integer
          minimum: 1
          maximum: 12
          description: Month
        day:
          type: integer
          minimum: 1
          maximum: 31
          description: Day
        hour:
          type: integer
          minimum: 0
          maximum: 23
          description: Hour
        min:
          type: integer
          minimum: 0
          maximum: 59
          description: Minutes
        sec:
          type: integer
          minimum: 0
          maximum: 59
          description: Seconds
        timeFmt:
          type: string
          enum:
            - MM/DD/YYYY
            - YYYY/MM/DD
            - DD/MM/YYYY
          description: Date format
        timeZone:
          type: integer
          minimum: -46800
          maximum: 43200
          description: Timezone offset in seconds
        hourFmt:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Hour format
            * 0 - 24 hour clock
            * 1 - 12 hour clock
    EnableSwitch:
      type: integer
      enum:
        - 0
        - 1
      description: |
        Enable/disable switch
        * 0 - Disabled
        * 1 - Enabled
      example: 1
    DSTConfig:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/EnableSwitch'
        offset:
          type: integer
          minimum: 1
          maximum: 2
          description: DST time offset in hours
        startMon:
          type: integer
          minimum: 1
          maximum: 12
          description: Start month
        startWeek:
          type: integer
          minimum: 1
          maximum: 5
          description: Start week of month
        startWeekday:
          type: integer
          minimum: 0
          maximum: 6
          description: Start day of week (0=Sunday)
        startHour:
          type: integer
          minimum: 0
          maximum: 23
          description: Start hour
        startMin:
          type: integer
          minimum: 0
          maximum: 59
          description: Start minute
        startSec:
          type: integer
          minimum: 0
          maximum: 59
          description: Start second
        endMon:
          type: integer
          minimum: 1
          maximum: 12
          description: End month
        endWeek:
          type: integer
          minimum: 1
          maximum: 5
          description: End week of month
        endWeekday:
          type: integer
          minimum: 0
          maximum: 6
          description: End day of week (0=Sunday)
        endHour:
          type: integer
          minimum: 0
          maximum: 23
          description: End hour
        endMin:
          type: integer
          minimum: 0
          maximum: 59
          description: End minute
        endSec:
          type: integer
          minimum: 0
          maximum: 59
          description: End second
    WeekDay:
      type: string
      enum:
        - Everyday
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      description: Day of the week
    AutoMaintConfig:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/EnableSwitch'
        hour:
          type: integer
          minimum: 0
          maximum: 23
          description: Hour of maintenance
        min:
          type: integer
          minimum: 0
          maximum: 59
          description: Minute of maintenance
        sec:
          type: integer
          minimum: 0
          maximum: 59
          description: Second of maintenance
        weekDay:
          $ref: '#/components/schemas/WeekDay'
    StorageInfo:
      type: object
      properties:
        capacity:
          type: integer
          description: Total capacity in MB
        format:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Storage format status
            * 0 - Not formatted
            * 1 - Formatted
        mount:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Mount status
            * 0 - Not mounted
            * 1 - Mounted
        number:
          type: integer
          description: External SATA interface number
        size:
          type: integer
          description: Remaining capacity in MB
        storageType:
          type: integer
          description: Type of storage device
    UpgradeStatus:
      type: object
      properties:
        Persent:
          type: integer
          minimum: 0
          maximum: 100
          description: Upgrade progress percentage
        code:
          type: integer
          description: Status code of upgrade process
    TokenInfo:
      type: object
      required:
        - name
        - leaseTime
      properties:
        name:
          type: string
          maxLength: 32
          description: Token string
        leaseTime:
          type: integer
          description: Token lease time in seconds
          example: 3600
    UserInfo:
      type: object
      required:
        - userName
      properties:
        userName:
          type: string
          maxLength: 31
          description: Username
        level:
          type: string
          enum:
            - guest
            - admin
          description: User permission level
        password:
          type: string
          maxLength: 31
          description: User password (only for creation/modification)
    OnlineUserInfo:
      type: object
      required:
        - userName
        - sessionId
      properties:
        userName:
          type: string
          description: Username of online user
        sessionId:
          type: integer
          description: Session ID
        ip:
          type: string
          description: IP address of the user
        level:
          type: string
          enum:
            - guest
            - admin
          description: User permission level
        canbeDisconn:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Whether user can be disconnected
            * 0 - Cannot be disconnected
            * 1 - Can be disconnected
    LocalLinkConfig:
      type: object
      properties:
        activeLink:
          type: string
          enum:
            - LAN
            - Wi-Fi
          description: Active network connection type
        mac:
          type: string
          pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
          description: Network interface MAC address
        type:
          type: string
          enum:
            - DHCP
            - Static
          description: IP address assignment method
        static:
          type: object
          description: Static IP configuration
          properties:
            ip:
              type: string
              format: ipv4
              description: Static IP address
            gateway:
              type: string
              format: ipv4
              description: Gateway address
            mask:
              type: string
              format: ipv4
              description: Subnet mask
        dns:
          type: object
          description: DNS configuration
          properties:
            auto:
              $ref: '#/components/schemas/EnableSwitch'
              description: Whether to get DNS automatically
            dns1:
              type: string
              format: ipv4
              description: Primary DNS server
            dns2:
              type: string
              format: ipv4
              description: Secondary DNS server
    DDNSConfig:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/EnableSwitch'
          description: DDNS service enable status
        type:
          type: string
          enum:
            - no-ip
            - Dyndns
          description: DDNS service provider
        domain:
          type: string
          maxLength: 127
          description: DDNS domain name
        userName:
          type: string
          maxLength: 127
          description: DDNS account username
        password:
          type: string
          maxLength: 127
          description: DDNS account password
        servAddr:
          type: string
          maxLength: 127
          description: DDNS server address
    ScheduleTable:
      type: string
      pattern: ^[01]{168}$
      description: |
        Schedule configuration table with 168 characters (7 days * 24 hours)
        * 0 - Disabled for this hour
        * 1 - Enabled for this hour
      example: '111111111111111111111111000000000000000000000000111111111111111111111111'
    EmailConfig:
      type: object
      properties:
        addr1:
          type: string
          maxLength: 127
          description: First recipient email address
        addr2:
          type: string
          maxLength: 127
          description: Second recipient email address
        addr3:
          type: string
          maxLength: 127
          description: Third recipient email address
        attachment:
          type: string
          enum:
            - 'no'
            - picture
            - video
            - onlyPicture
          description: |
            Email attachment type
            * no - No attachments
            * picture - Attach pictures
            * video - Attach videos
            * onlyPicture - Only attach pictures (no video)
        interval:
          type: string
          enum:
            - 30 Seconds
            - 1 Minute
            - 5 Minutes
            - 10 Minutes
            - 30 Minutes
          description: Minimum interval between email notifications
        nickName:
          type: string
          maxLength: 127
          description: Sender nickname
        password:
          type: string
          maxLength: 31
          description: SMTP account password
        smtpPort:
          type: integer
          minimum: 1
          maximum: 65535
          description: SMTP server port
        smtpServer:
          type: string
          maxLength: 127
          description: SMTP server address
        ssl:
          $ref: '#/components/schemas/EnableSwitch'
          description: Whether to use SSL/TLS encryption
        userName:
          type: string
          maxLength: 127
          description: SMTP account username
        schedule:
          type: object
          properties:
            enable:
              $ref: '#/components/schemas/EnableSwitch'
              description: Email schedule enable status
            table:
              $ref: '#/components/schemas/ScheduleTable'
              description: Weekly schedule table for email notifications
    EmailSchedule:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
        table:
          type: object
          properties:
            AI_PEOPLE:
              $ref: '#/components/schemas/ScheduleTable'
            AI_VEHICLE:
              $ref: '#/components/schemas/ScheduleTable'
            MD:
              $ref: '#/components/schemas/ScheduleTable'
            VL:
              $ref: '#/components/schemas/ScheduleTable'
    EmailConfigV20:
      type: object
      properties:
        addr1:
          type: string
          maxLength: 127
          description: First recipient email address
        addr2:
          type: string
          maxLength: 127
          description: Second recipient email address
        addr3:
          type: string
          maxLength: 127
          description: Third recipient email address
        attachmentType:
          type: integer
          description: Type of email attachments
        enable:
          $ref: '#/components/schemas/ScheduleTable'
        interval:
          type: string
          enum:
            - 30 Seconds
            - 1 Minute
            - 5 Minutes
            - 10 Minutes
            - 30 Minutes
        nickName:
          type: string
          maxLength: 127
        password:
          type: string
          maxLength: 31
        schedule:
          $ref: '#/components/schemas/EmailSchedule'
        smtpPort:
          type: integer
          minimum: 1
          maximum: 65535
        smtpServer:
          type: string
          maxLength: 127
        ssl:
          $ref: '#/components/schemas/ScheduleTable'
        userName:
          type: string
          maxLength: 127
    EmailTestResult:
      type: object
      properties:
        rspCode:
          type: integer
          enum:
            - 200
            - -480
            - -481
            - -482
            - -483
            - -484
            - -485
          description: |
            Email test result code:
            * 200 - Success
            * -480 - Undefined error
            * -481 - Connection failed
            * -482 - Authentication failed
            * -483 - Network error
            * -484 - Server error
            * -485 - Memory error
    BaseFtpConfig:
      type: object
      properties:
        anonymous:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Use anonymous login
            * 0 - Use credentials
            * 1 - Anonymous login
        port:
          type: integer
          minimum: 1
          maximum: 65535
          default: 21
          description: FTP server port
        server:
          type: string
          maxLength: 127
          description: FTP server address
        userName:
          type: string
          maxLength: 127
          description: FTP account username
        password:
          type: string
          maxLength: 127
          description: FTP account password
        remoteDir:
          type: string
          maxLength: 255
          description: Remote directory path
    FtpConfig:
      allOf:
        - $ref: '#/components/schemas/BaseFtpConfig'
        - type: object
          properties:
            autoDir:
              type: integer
              enum:
                - 0
                - 1
              description: |
                Auto create directories
                * 0 - Manual directory structure
                * 1 - Auto create directories
            interval:
              type: integer
              minimum: 1
              maximum: 3600
              description: Upload interval in seconds
            maxSize:
              type: integer
              minimum: 10
              maximum: 1024
              description: Maximum file size in MB
            mode:
              type: integer
              minimum: 0
              maximum: 2
              description: |
                Transfer mode
                * 0 - Auto
                * 1 - Active
                * 2 - Passive
            streamType:
              type: integer
              enum:
                - 0
                - 1
                - 2
              description: |
                Upload content type
                * 0 - Pictures and videos
                * 1 - Pictures only
                * 2 - Videos only
            schedule:
              type: object
              properties:
                enable:
                  $ref: '#/components/schemas/EnableSwitch'
                table:
                  $ref: '#/components/schemas/ScheduleTable'
    FtpTestResult:
      type: object
      properties:
        rspCode:
          type: integer
          enum:
            - 200
            - -451
            - -452
            - -453
            - -454
          description: |
            FTP test result code:
            * 200 - Success
            * -451 - Login failed
            * -452 - Create directory failed
            * -453 - Upload failed
            * -454 - Connection failed
    NtpConfig:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/EnableSwitch'
          description: NTP service enable status
        server:
          type: string
          maxLength: 127
          description: NTP server address
        port:
          type: integer
          minimum: 1
          maximum: 65535
          default: 123
          description: NTP server port
        interval:
          type: integer
          minimum: 60
          maximum: 65535
          description: Time synchronization interval in minutes
    NetworkPortConfig:
      type: object
      properties:
        httpEnable:
          $ref: '#/components/schemas/EnableSwitch'
          description: HTTP service enable status
        httpPort:
          type: integer
          minimum: 1
          maximum: 65535
          default: 80
          description: HTTP port
        httpsEnable:
          $ref: '#/components/schemas/EnableSwitch'
          description: HTTPS service enable status
        httpsPort:
          type: integer
          minimum: 1
          maximum: 65535
          default: 443
          description: HTTPS port
        rtspEnable:
          $ref: '#/components/schemas/EnableSwitch'
          description: RTSP service enable status
        rtspPort:
          type: integer
          minimum: 1
          maximum: 65535
          default: 554
          description: RTSP port
        rtmpEnable:
          $ref: '#/components/schemas/EnableSwitch'
          description: RTMP service enable status
        rtmpPort:
          type: integer
          minimum: 1
          maximum: 65535
          default: 1935
          description: RTMP port
        onvifEnable:
          $ref: '#/components/schemas/EnableSwitch'
          description: ONVIF service enable status
        onvifPort:
          type: integer
          minimum: 1
          maximum: 65535
          default: 8000
          description: ONVIF port
        mediaPort:
          type: integer
          minimum: 1
          maximum: 65535
          default: 9000
          description: Media port
    UpnpConfig:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/EnableSwitch'
          description: UPnP enable status
    WifiConfig:
      type: object
      properties:
        password:
          type: string
          maxLength: 127
          description: WiFi network password
        ssid:
          type: string
          maxLength: 127
          description: WiFi network SSID
    WifiNetwork:
      type: object
      properties:
        bencrypt:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Network encryption status
            * 0 - Open network
            * 1 - Encrypted network
        signal:
          type: integer
          minimum: 1
          maximum: 4
          description: |
            Signal strength
            * 1 - signal <= -60
            * 2 - signal <= -50
            * 3 - signal <= -40
            * 4 - signal > -40
        ssid:
          type: string
          description: Network SSID
    PushSchedule:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/EnableSwitch'
        table:
          $ref: '#/components/schemas/ScheduleTable'
    PushScheduleV20:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
        table:
          type: object
          properties:
            AI_PEOPLE:
              $ref: '#/components/schemas/ScheduleTable'
            AI_VEHICLE:
              $ref: '#/components/schemas/ScheduleTable'
            MD:
              $ref: '#/components/schemas/ScheduleTable'
            TIMING:
              $ref: '#/components/schemas/ScheduleTable'
    PushConfigV20:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/EnableSwitch'
        schedule:
          $ref: '#/components/schemas/PushScheduleV20'
    P2pConfig:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/EnableSwitch'
          description: P2P service enable status
        uid:
          type: string
          description: Device UID for P2P connection
    CertificateInfo:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/EnableSwitch'
          description: Custom certificate enable status
        crtName:
          type: string
          description: Certificate file name
        keyName:
          type: string
          description: Private key file name
    RtspUrlInfo:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
        mainStream:
          type: string
          description: RTSP URL for main stream
        subStream:
          type: string
          description: RTSP URL for sub stream
    ImageSettings:
      type: object
      properties:
        bright:
          type: integer
          minimum: 0
          maximum: 255
          description: Image brightness
        contrast:
          type: integer
          minimum: 0
          maximum: 255
          description: Image contrast
        saturation:
          type: integer
          minimum: 0
          maximum: 255
          description: Image saturation
        hue:
          type: integer
          minimum: 0
          maximum: 255
          description: Image hue
        sharpen:
          type: integer
          minimum: 0
          maximum: 255
          description: Image sharpness
        channel:
          $ref: '#/components/schemas/Channel'
    OsdSettings:
      type: object
      properties:
        bgcolor:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Background color
            * 0 - Transparent
            * 1 - Solid
        channel:
          $ref: '#/components/schemas/Channel'
        osdChannel:
          type: object
          properties:
            enable:
              $ref: '#/components/schemas/EnableSwitch'
            name:
              type: string
              maxLength: 31
              description: Camera name to display
            pos:
              type: string
              enum:
                - Upper Left
                - Top Center
                - Upper Right
                - Lower Left
                - Bottom Center
                - Lower Right
                - Other Configuration
              description: Position of channel name display
        osdTime:
          type: object
          properties:
            enable:
              $ref: '#/components/schemas/EnableSwitch'
            pos:
              type: string
              enum:
                - Upper Left
                - Top Center
                - Upper Right
                - Lower Left
                - Bottom Center
                - Lower Right
                - Other Configuration
              description: Position of time display
        watermark:
          $ref: '#/components/schemas/EnableSwitch'
    IspSettings:
      type: object
      properties:
        antiFlicker:
          type: string
          enum:
            - Other
            - 50HZ
            - 60HZ
            - 'Off'
          description: Anti-flicker mode
        backLight:
          type: string
          enum:
            - 'Off'
            - BackLightControl
            - DynamicRangeControl
          description: Backlight compensation mode
        dayNight:
          type: string
          enum:
            - Auto
            - Color
            - Black&White
          description: Day/Night mode
        exposure:
          type: string
          enum:
            - Auto
            - LowNoise
            - Anti-Smearing
            - Manual
          description: Exposure mode
        whiteBalance:
          type: string
          enum:
            - Auto
            - Manual
          description: White balance mode
        mirroring:
          $ref: '#/components/schemas/EnableSwitch'
          description: Image mirroring
        rotation:
          $ref: '#/components/schemas/EnableSwitch'
          description: Image rotation
        nr3d:
          $ref: '#/components/schemas/EnableSwitch'
          description: 3D noise reduction
        blc:
          type: integer
          minimum: 0
          maximum: 255
          description: Backlight compensation level
        gain:
          type: object
          properties:
            max:
              type: integer
              minimum: 1
              maximum: 100
            min:
              type: integer
              minimum: 1
              maximum: 100
        shutter:
          type: object
          properties:
            max:
              type: integer
              minimum: 0
              maximum: 125
            min:
              type: integer
              minimum: 0
              maximum: 125
    BrightnessSettings:
      type: object
      properties:
        bright:
          type: integer
          minimum: 0
          maximum: 255
          description: Brightness level
        dark:
          type: integer
          minimum: 0
          maximum: 255
          description: Darkness level
        mode:
          type: string
          enum:
            - Auto
            - Manual
          description: Brightness control mode
    MaskArea:
      type: object
      properties:
        block:
          type: object
          properties:
            height:
              type: integer
              minimum: 0
              description: Height of mask area
            width:
              type: integer
              minimum: 0
              description: Width of mask area
            x:
              type: integer
              minimum: 0
              description: X coordinate of mask area
            'y':
              type: integer
              minimum: 0
              description: Y coordinate of mask area
        screen:
          type: object
          properties:
            height:
              type: integer
              minimum: 0
              description: Screen height
            width:
              type: integer
              minimum: 0
              description: Screen width
    CropSettings:
      type: object
      properties:
        cropHeight:
          type: integer
          minimum: 480
          description: Height of crop area
        cropWidth:
          type: integer
          minimum: 640
          description: Width of crop area
        mainHeight:
          type: integer
          description: Height of main stream
        mainWidth:
          type: integer
          description: Width of main stream
        minHeight:
          type: integer
          minimum: 480
          description: Minimum allowed height
        minWidth:
          type: integer
          minimum: 640
          description: Minimum allowed width
        topLeftX:
          type: integer
          minimum: 0
          description: X coordinate of top-left corner
        topLeftY:
          type: integer
          minimum: 0
          description: Y coordinate of top-left corner
    StitchSettings:
      type: object
      properties:
        distance:
          type: number
          format: float
          minimum: 2
          maximum: 20
          description: Distance between images in stitching
        stitchXMove:
          type: integer
          minimum: -100
          maximum: 100
          description: Horizontal pixel adjustment for stitching
        stitchYMove:
          type: integer
          minimum: -100
          maximum: 100
          description: Vertical pixel adjustment for stitching
    VideoStreamConfig:
      type: object
      properties:
        bitRate:
          type: integer
          description: Bit rate in Kbps
        frameRate:
          type: integer
          description: Frame rate in fps
        gop:
          type: integer
          minimum: 1
          maximum: 4
          description: Group of Pictures interval
        height:
          type: integer
          description: Video height in pixels
        width:
          type: integer
          description: Video width in pixels
        profile:
          type: string
          enum:
            - Base
            - Main
            - High
          description: H.264/H.265 profile
        size:
          type: string
          description: Resolution string (e.g. "3840*2160")
        vType:
          type: string
          enum:
            - h264
            - h265
          description: Video encoding type
    EncodingConfig:
      type: object
      properties:
        audio:
          $ref: '#/components/schemas/EnableSwitch'
          description: Audio encoding enable/disable
        channel:
          $ref: '#/components/schemas/Channel'
        mainStream:
          $ref: '#/components/schemas/VideoStreamConfig'
          description: Main stream configuration
        subStream:
          $ref: '#/components/schemas/VideoStreamConfig'
          description: Sub stream configuration
    RecordingConfig:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
        overwrite:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Whether to overwrite old recordings
            * 0 - Stop recording when disk is full
            * 1 - Overwrite oldest recordings
        packTime:
          type: string
          enum:
            - 30 Minutes
            - 45 Minutes
            - 60 Minutes
          description: Recording file package duration
        postRec:
          type: string
          enum:
            - 15 Seconds
            - 30 Seconds
            - 1 Minute
            - 10 Minutes
          description: Post-recording duration
        preRec:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Whether to enable pre-recording
            * 0 - Disabled
            * 1 - Enabled
        schedule:
          type: object
          properties:
            enable:
              $ref: '#/components/schemas/EnableSwitch'
            table:
              $ref: '#/components/schemas/ScheduleTable'
    RecordingConfigV20:
      type: object
      properties:
        enable:
          $ref: '#/components/schemas/EnableSwitch'
        overwrite:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Whether to overwrite old recordings
            * 0 - Stop recording when disk is full
            * 1 - Overwrite oldest recordings
        packTime:
          type: string
          enum:
            - 30 Minutes
            - 45 Minutes
            - 60 Minutes
          description: Recording file package duration
        postRec:
          type: string
          enum:
            - 1 Minute
            - 2 Minutes
            - 5 Minutes
            - 10 Minutes
          description: Post-recording duration
        preRec:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Whether to enable pre-recording
            * 0 - Disabled
            * 1 - Enabled
        saveDay:
          type: integer
          minimum: 0
          description: Number of days to keep recordings (0 for unlimited)
        schedule:
          type: object
          properties:
            channel:
              $ref: '#/components/schemas/Channel'
            table:
              type: object
              properties:
                MD:
                  $ref: '#/components/schemas/ScheduleTable'
                  description: Motion detection recording schedule
                TIMING:
                  $ref: '#/components/schemas/ScheduleTable'
                  description: Continuous recording schedule
                AI_PEOPLE:
                  $ref: '#/components/schemas/ScheduleTable'
                  description: AI people detection recording schedule
                AI_VEHICLE:
                  $ref: '#/components/schemas/ScheduleTable'
                  description: AI vehicle detection recording schedule
    RecordingFile:
      type: object
      properties:
        name:
          type: string
          description: Recording filename
        StartTime:
          $ref: '#/components/schemas/TimeConfig'
        EndTime:
          $ref: '#/components/schemas/TimeConfig'
        frameRate:
          type: integer
          description: Frame rate of recording
        height:
          type: integer
          description: Video height in pixels
        width:
          type: integer
          description: Video width in pixels
        size:
          type: integer
          description: File size in bytes
        type:
          type: string
          enum:
            - main
            - sub
          description: Stream type
    NvrDownloadFile:
      type: object
      properties:
        fileName:
          type: string
          description: Recording file name
        fileSize:
          type: string
          description: File size in bytes
    PTZPreset:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
        enable:
          $ref: '#/components/schemas/EnableSwitch'
        id:
          type: integer
          minimum: 1
          maximum: 64
          description: Preset position ID
        name:
          type: string
          maxLength: 31
          description: Name of the preset position
    PTZPatrol:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
        enable:
          $ref: '#/components/schemas/EnableSwitch'
        id:
          type: integer
          minimum: 1
          maximum: 6
          description: Patrol ID
        name:
          type: string
          maxLength: 31
          description: Name of the patrol route
        running:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Running status
            * 0 - Stopped
            * 1 - Running
        preset:
          type: array
          maxItems: 16
          items:
            type: object
            properties:
              id:
                type: integer
                minimum: 1
                maximum: 64
                description: Preset ID to visit
              dwellTime:
                type: integer
                minimum: 1
                maximum: 30
                description: Time to stay at preset (seconds)
              speed:
                type: integer
                minimum: 1
                maximum: 64
                description: Movement speed to preset
    PTZOperation:
      type: string
      enum:
        - Stop
        - Left
        - Right
        - Up
        - Down
        - LeftUp
        - LeftDown
        - RightUp
        - RightDown
        - IrisDec
        - IrisInc
        - ZoomDec
        - ZoomInc
        - FocusDec
        - FocusInc
        - Auto
        - StartPatrol
        - StopPatrol
        - ToPos
      description: |
        PTZ control operations
        * Stop - Stop PTZ movement
        * Left - Turn left
        * Right - Turn right
        * Up - Turn up
        * Down - Turn down
        * LeftUp - Turn left-up
        * LeftDown - Turn left-down
        * RightUp - Turn right-up
        * RightDown - Turn right-down
        * IrisDec - Decrease iris
        * IrisInc - Increase iris
        * ZoomDec - Zoom out
        * ZoomInc - Zoom in
        * FocusDec - Focus back
        * FocusInc - Focus forward
        * Auto - Auto pan
        * StartPatrol - Start patrol route
        * StopPatrol - Stop patrol route
        * ToPos - Move to preset position
    SerialConfig:
      type: object
      properties:
        baudRate:
          type: integer
          enum:
            - 1200
            - 2400
            - 4800
            - 9600
          description: The baud rate of the serial port
        channel:
          $ref: '#/components/schemas/Channel'
        ctrlAddr:
          type: integer
          minimum: 1
          maximum: 64
          description: The control address for PTZ protocol
        ctrlProtocol:
          type: string
          enum:
            - PELCO_D
            - PELCO_P
          description: PTZ control protocol
        dataBit:
          type: string
          enum:
            - CS8
            - CS7
            - CS6
            - CS5
          description: Serial data bits configuration
        flowCtrl:
          type: string
          enum:
            - none
            - hard
            - xon
            - xoff
          description: Flow control configuration
        parity:
          type: string
          enum:
            - none
            - odd
            - even
          description: Parity check configuration
        stopBit:
          type: integer
          enum:
            - 1
            - 2
          description: Stop bits configuration
    PTZPattern:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
        track:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                minimum: 1
                maximum: 6
                description: Pattern track ID
              enable:
                $ref: '#/components/schemas/EnableSwitch'
              running:
                type: integer
                enum:
                  - 0
                  - 1
                description: |
                  Running status
                  * 0 - Stopped
                  * 1 - Running
              name:
                type: string
                maxLength: 191
                description: Name of the pattern track
    AutoFocusConfig:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
        disable:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Auto focus state
            * 0 - Auto focus enabled
            * 1 - Auto focus disabled
    PTZGuardConfig:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
        benable:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Enable automatic return to guard position
            * 0 - Disabled
            * 1 - Enabled
        bexistPos:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Guard position status
            * 0 - No guard position set
            * 1 - Guard position exists
        timeout:
          type: integer
          minimum: 60
          description: Time in seconds before returning to guard position
    PTZCheckState:
      type: integer
      enum:
        - 0
        - 1
        - 2
      description: |
        PTZ check state
        * 0 - Idle
        * 1 - Check in progress
        * 2 - Check completed
    AlarmArea:
      type: object
      properties:
        cols:
          type: integer
          description: Number of columns in detection grid
        rows:
          type: integer
          description: Number of rows in detection grid
        table:
          type: string
          description: |
            Grid configuration string where each character represents a cell
            * 0 - Disabled
            * 1 - Enabled
          example: 11111111111111111111...
    AlarmSensitivity:
      type: object
      properties:
        beginHour:
          type: integer
          minimum: 0
          maximum: 23
          description: Start hour for this sensitivity period
        beginMin:
          type: integer
          minimum: 0
          maximum: 59
          description: Start minute for this sensitivity period
        endHour:
          type: integer
          minimum: 0
          maximum: 23
          description: End hour for this sensitivity period
        endMin:
          type: integer
          minimum: 0
          maximum: 59
          description: End minute for this sensitivity period
        sensitivity:
          type: integer
          minimum: 1
          maximum: 50
          description: Sensitivity level
        id:
          type: integer
          description: Period identifier
    MdAlarmConfig:
      type: object
      properties:
        useNewSens:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Whether to use new sensitivity settings
            * 0 - Use legacy sensitivity
            * 1 - Use new sensitivity settings
        newSens:
          type: object
          properties:
            sensDef:
              type: integer
              minimum: 1
              maximum: 50
              description: Default sensitivity level
            sens:
              type: array
              items:
                type: object
                properties:
                  enable:
                    $ref: '#/components/schemas/EnableSwitch'
                  sensitivity:
                    type: integer
                    minimum: 1
                    maximum: 50
                  beginHour:
                    type: integer
                    minimum: 0
                    maximum: 23
                  beginMin:
                    type: integer
                    minimum: 0
                    maximum: 59
                  endHour:
                    type: integer
                    minimum: 0
                    maximum: 23
                  endMin:
                    type: integer
                    minimum: 0
                    maximum: 59
                  priority:
                    type: integer
                    minimum: 0
                    description: Priority level
    LedState:
      type: string
      enum:
        - Auto
        - 'On'
        - 'Off'
      description: |
        LED state
        * Auto - Automatic control
        * On - Always on
        * Off - Always off
    WhiteLedConfig:
      type: object
      properties:
        state:
          type: integer
          enum:
            - 0
            - 1
          description: |
            White LED state
            * 0 - Off
            * 1 - On
        mode:
          type: integer
          enum:
            - 0
            - 1
            - 2
          description: |
            Brightness mode
            * 0 - Always light at night
            * 1 - Alarm trigger mode
            * 2 - Schedule mode
        bright:
          type: integer
          minimum: 1
          maximum: 100
          description: Brightness level (1-100)
        LightingSchedule:
          type: object
          properties:
            StartHour:
              type: integer
              minimum: 0
              maximum: 23
            StartMin:
              type: integer
              minimum: 0
              maximum: 59
            EndHour:
              type: integer
              minimum: 0
              maximum: 23
            EndMin:
              type: integer
              minimum: 0
              maximum: 59
        wlAiDetectType:
          type: object
          properties:
            dog_cat:
              $ref: '#/components/schemas/EnableSwitch'
            face:
              $ref: '#/components/schemas/EnableSwitch'
            people:
              $ref: '#/components/schemas/EnableSwitch'
            vehicle:
              $ref: '#/components/schemas/EnableSwitch'
    AiDetectTypes:
      type: object
      properties:
        dog_cat:
          $ref: '#/components/schemas/EnableSwitch'
          description: Enable/disable dog and cat detection
        face:
          $ref: '#/components/schemas/EnableSwitch'
          description: Enable/disable face detection
        people:
          $ref: '#/components/schemas/EnableSwitch'
          description: Enable/disable people detection
        vehicle:
          $ref: '#/components/schemas/EnableSwitch'
          description: Enable/disable vehicle detection
    AiTrackTypes:
      type: object
      properties:
        dog_cat:
          $ref: '#/components/schemas/EnableSwitch'
          description: Enable/disable dog and cat tracking
        face:
          $ref: '#/components/schemas/EnableSwitch'
          description: Enable/disable face tracking
        people:
          $ref: '#/components/schemas/EnableSwitch'
          description: Enable/disable people tracking
        vehicle:
          $ref: '#/components/schemas/EnableSwitch'
          description: Enable/disable vehicle tracking
    AiDetectionState:
      type: object
      properties:
        alarm_state:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Current alarm state
            * 0 - No alarm
            * 1 - Alarm triggered
        support:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Whether this detection type is supported
            * 0 - Not supported
            * 1 - Supported
    InitialRange:
      type: object
      properties:
        initial:
          type: object
          description: Initial values for parameters
        range:
          type: object
          description: Allowed ranges/values for parameters
        value:
          type: object
          description: Current values
    Sensitivity:
      type: integer
      minimum: 1
      maximum: 50
      description: Sensitivity level
      example: 25
    DeviceSupportType:
      type: string
      enum:
        - ipc
        - nvr
        - both
      description: |
        Device type support
        * ipc - Only supported on IP cameras
        * nvr - Only supported on NVR devices
        * both - Supported on both device types
    MaintenanceStatus:
      type: object
      required:
        - rspCode
      properties:
        rspCode:
          type: integer
          enum:
            - 200
          description: Operation status code
        progress:
          type: integer
          minimum: 0
          maximum: 100
          description: Operation progress percentage
  responses:
    Error:
      description: Operation failed
      content:
        application/json:
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/BaseCommandResponse'
                - type: object
                  properties:
                    error:
                      $ref: '#/components/schemas/ErrorResponse'
    Success:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/BaseCommandResponse'
                - type: object
                  properties:
                    value:
                      type: object
                      properties:
                        rspCode:
                          type: integer
                          enum:
                            - 200
                          description: Success response code
    FileDownload:
      description: File download response
      headers:
        Content-Type:
          schema:
            type: string
          description: MIME type of the file
        Content-Length:
          schema:
            type: integer
          description: Size of file in bytes
        Content-Disposition:
          schema:
            type: string
          description: Attachment filename
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    ImageResponse:
      description: Image response
      headers:
        Content-Type:
          schema:
            type: string
          description: Image MIME type
        Content-Length:
          schema:
            type: integer
          description: Size of image in bytes
      content:
        image/jpeg:
          schema:
            type: string
            format: binary
  securitySchemes:
    tokenAuth:
      type: apiKey
      name: token
      in: query
      description: Token obtained from Login command
    shortSession:
      type: http
      scheme: basic
      description: Short-session authentication using username and password as query parameters
x-tagGroups:
  - name: Device Types
    tags:
      - IPC-only
      - NVR-only
  - name: Features
    tags:
      - System
      - Security
      - Network
      - Video Input
      - Encoding
      - Recording
      - PTZ
      - Alarm
      - LED
      - AI
